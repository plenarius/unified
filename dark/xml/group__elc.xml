<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="group__elc" kind="group">
    <compoundname>elc</compoundname>
    <title>ELC</title>
    <innerfile refid="nwnx__elc_8nss">nwnx_elc.nss</innerfile>
      <sectiondef kind="user-defined">
      <header>ELC Failure Types</header>
      <description><para><anchor id="group__elc_1elc_fail_type"/></para>
</description>
      <memberdef kind="variable" id="group__elc_1gaa09bf88c00cbf1ee60038ecf4d44ae7b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_NONE</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_NONE</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="13" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1gaacd02a1af0ad8e78ed791343b97da5e6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_CHARACTER</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_CHARACTER</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="14" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1ga38d517de881416a68a6c3356ded2edac" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_ITEM</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_ITEM</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="15" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1ga312be6e31150f0987c1301d5bfda1116" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_SKILL</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_SKILL</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="16" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1gad41ca16b81506fe13eac194c5d77e824" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_FEAT</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_FEAT</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="17" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1gaf204259b43b1f440fbbb05739cec0a03" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_SPELL</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_SPELL</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="18" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1gaea995d7304c6e960c41156cc52c492c4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_CUSTOM</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_CUSTOM</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="19" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>ELC Failure Subtypes</header>
      <description><para><anchor id="group__elc_1elc_fail_subtype"/> <simplesect kind="note"><para>By default these constants are commented out to avoid a limitation on constants. Uncomment them as needed. </para>
</simplesect>
</para>
</description>
      <memberdef kind="variable" id="group__elc_1ga07256d7e47ab36f29bfca8c0c1562aad" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_SUBTYPE_NONE</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_SUBTYPE_NONE</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="27" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__elc_1ga3b7e3e4509a25a4987c9afa50ba06ac5" prot="private" static="no" mutable="no">
        <type>const string</type>
        <definition>const string NWNX_ELC</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC</name>
        <initializer>= &quot;NWNX_ELC&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="7" column="14" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__elc_1gab972f430b5120e2f0484c50b14017928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NWNX_ELC_SetELCScript</definition>
        <argsstring>(string sScript)</argsstring>
        <name>NWNX_ELC_SetELCScript</name>
        <param>
          <type>string</type>
          <declname>sScript</declname>
        </param>
        <briefdescription>
<para>Sets the script that runs whenever an ELC validation failure happens. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sScript</parametername>
</parameternamelist>
<parameterdescription>
<para>The script name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="153" column="6" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="153" bodyend="159" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1gaf8f9ce7d4def55be7f42ffef8ac0218b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NWNX_ELC_EnableCustomELCCheck</definition>
        <argsstring>(int bEnabled)</argsstring>
        <name>NWNX_ELC_EnableCustomELCCheck</name>
        <param>
          <type>int</type>
          <declname>bEnabled</declname>
        </param>
        <briefdescription>
<para>Enables a custom ELC Check that will call the ELC Script with the NWNX_ELC_VALIDATION_FAILURE_TYPE_CUSTOM type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bEnabled</parametername>
</parameternamelist>
<parameterdescription>
<para>TRUE to use this check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Only runs if you have an ELC script set, be sure to skip this check if a player doesn&apos;t fail your custom check otherwise they won&apos;t be able to log in </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="161" column="6" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="161" bodyend="167" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="92" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1gad5c223e082822a98a478dcdfb0c58fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NWNX_ELC_SkipValidationFailure</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_SkipValidationFailure</name>
        <briefdescription>
<para>Skip an ELC Validation Failure Event. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="169" column="6" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="169" bodyend="174" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga2b8d375be0d3f169f77f596b4365ef89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureType</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureType</name>
        <briefdescription>
<para>Get the validation failure type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="group__elc_1elc_fail_type" kindref="member">Validation Failure Type</ref> </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="176" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="176" bodyend="182" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="101" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga9c156cbef588d042100fcb863d76fbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureSubType</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureSubType</name>
        <briefdescription>
<para>Get the validation failure subtype. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="group__elc_1elc_fail_subtype" kindref="member">Validation Failure Subtype</ref> </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="184" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="184" bodyend="190" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="106" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga96cad82fef77d44f2d5e8e31c4442d5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureMessageStrRef</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureMessageStrRef</name>
        <briefdescription>
<para>Get the failure message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The talk table strref the player receives. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="192" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="192" bodyend="198" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="111" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga941296472e032be124dea8d8118b15a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NWNX_ELC_SetValidationFailureMessageStrRef</definition>
        <argsstring>(int nStrRef)</argsstring>
        <name>NWNX_ELC_SetValidationFailureMessageStrRef</name>
        <param>
          <type>int</type>
          <declname>nStrRef</declname>
        </param>
        <briefdescription>
<para>Set the failure message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nStrRef</parametername>
</parameternamelist>
<parameterdescription>
<para>The talk table strref the player receives, must be &gt; 0. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="200" column="6" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="200" bodyend="206" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="116" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1gafe933184f0deb75e7ceb976731860b62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>object</type>
        <definition>object NWNX_ELC_GetValidationFailureItem</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureItem</name>
        <briefdescription>
<para>Get the item that failed ILR validation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The object that caused the ILR validation failure. Returns OBJECT_INVALID on error. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script during a NWNX_ELC_VALIDATION_FAILURE_TYPE_ITEM validation failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="208" column="8" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="208" bodyend="214" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="122" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga084cf4874bb02adae65997cb9fe8bf4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureLevel</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureLevel</name>
        <briefdescription>
<para>Get the character level at which the validation failure occurred. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The character level or -1 on error. </para>
</simplesect>
<simplesect kind="remark"><para>May not always return a level, depending on where the failure occurred. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="216" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="216" bodyend="222" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="128" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga4db1366221aed91969d8db403de948fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureSkillID</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureSkillID</name>
        <briefdescription>
<para>Get the ID of the skill that failed ELC validation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The skill ID or -1 on error. </para>
</simplesect>
<simplesect kind="remark"><para>May not always return a skill id, depending on the validation failure subtype. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script during a NWNX_ELC_VALIDATION_FAILURE_TYPE_SKILL validation failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="224" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="224" bodyend="230" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="135" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1gaba8456ea776417c0a8656699861d49a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureFeatID</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureFeatID</name>
        <briefdescription>
<para>Get the ID of the feat that failed ELC validation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The feat ID or -1 on error </para>
</simplesect>
<simplesect kind="remark"><para>May not always return a feat id, depending on the validation failure subtype. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script during a NWNX_ELC_VALIDATION_FAILURE_TYPE_FEAT validation failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="232" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="232" bodyend="238" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="142" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga9b4d6f09791a5e7d07d2f61eff4c9761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureSpellID</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureSpellID</name>
        <briefdescription>
<para>Get the ID of the spell that failed ELC validation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The spell ID or -1 on error </para>
</simplesect>
<simplesect kind="remark"><para>May not always return a spell id, depending on the validation failure subtype. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script during a NWNX_ELC_VALIDATION_FAILURE_TYPE_SPELL validation failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="240" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="240" bodyend="246" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="149" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Replacement for ValidateCharacter: ELC &amp; ILR. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
