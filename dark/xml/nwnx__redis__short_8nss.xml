<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="nwnx__redis__short_8nss" kind="file" language="C++">
    <compoundname>nwnx_redis_short.nss</compoundname>
    <includes local="yes">nwnx</includes>
    <includes local="yes">nwnx_redis_lib</includes>
    <incdepgraph>
      <node id="3">
        <label>nwnx_redis_lib</label>
      </node>
      <node id="1">
        <label>Plugins/Redis/NWScript/nwnx_redis_short.nss</label>
        <link refid="nwnx__redis__short_8nss"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nwnx</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac7179729f485933eab9f7e8f5924318b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int APPEND</definition>
        <argsstring>(string key, string value)</argsstring>
        <name>APPEND</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>APPEND</para>
<para>Append a value to a key</para>
<para>Time complexity: O(1). The amortized time complexity is O(1) assuming the appended value is small and the already present value is of any size, since the dynamic string library used by Redis will double the free space available on every reallocation. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3229" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3229" bodyend="3238" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="22" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ace3af65b7f079794df3993e993064ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AUTH</definition>
        <argsstring>(string password)</argsstring>
        <name>AUTH</name>
        <param>
          <type>string</type>
          <declname>password</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>AUTH</para>
<para>Authenticate to the server Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3240" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3240" bodyend="3247" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="33" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a507cb6780d0bdf803b1aae686cf29a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BGREWRITEAOF</definition>
        <argsstring>()</argsstring>
        <name>BGREWRITEAOF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BGREWRITEAOF</para>
<para>Asynchronously rewrite the append-only file Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3249" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3249" bodyend="3253" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="43" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a16f36180b712e0179ec4c2ce76c10326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BGSAVE</definition>
        <argsstring>()</argsstring>
        <name>BGSAVE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BGSAVE</para>
<para>Asynchronously save the dataset to disk Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3255" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3255" bodyend="3259" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="51" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aebf3a63f4832df507da56cff69468e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BITCOUNT</definition>
        <argsstring>(string key, int start=0, int end=0)</argsstring>
        <name>BITCOUNT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BITCOUNT</para>
<para>Count set bits in a string</para>
<para>Time complexity: O(N) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3261" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3261" bodyend="3274" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="61" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a8e9b0dcdd09694782a06d6498245db21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BITFIELD</definition>
        <argsstring>(string key, string get_type=&quot;&quot;, int get_offset=0, string set_type=&quot;&quot;, int set_offset=0, int set_value=0, string incrby_type=&quot;&quot;, int incrby_offset=0, int incrby_increment=0)</argsstring>
        <name>BITFIELD</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>get_type</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>get_offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>set_type</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>set_offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>set_value</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>incrby_type</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>incrby_offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>incrby_increment</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BITFIELD</para>
<para>Perform arbitrary bitfield integer operations on strings</para>
<para>Time complexity: O(1) for each subcommand specified Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3276" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3276" bodyend="3307" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="77" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a30228c530313bcf1e01d89bcb8de1990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BITOP</definition>
        <argsstring>(string operation, string destkey, string key)</argsstring>
        <name>BITOP</name>
        <param>
          <type>string</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>string</type>
          <declname>destkey</declname>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BITOP</para>
<para>Perform bitwise operations between strings</para>
<para>Time complexity: O(N) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3309" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3309" bodyend="3321" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="105" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae074f94aa4e0caa434041a0edaf5eb3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BITPOS</definition>
        <argsstring>(string key, int bit, int start=0, int end=0)</argsstring>
        <name>BITPOS</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BITPOS</para>
<para>Find first bit set or clear in a string</para>
<para>Time complexity: O(N) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3323" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3323" bodyend="3339" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="120" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a08fffe6ef3612def17719eb92bf93431" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BLPOP</definition>
        <argsstring>(string key, int timeout)</argsstring>
        <name>BLPOP</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BLPOP</para>
<para>Remove and get the first element in a list, or block until one is available</para>
<para>Time complexity: O(1) Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3341" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3341" bodyend="3351" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="138" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a40a53f13200e006d312351b80707dd08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BRPOP</definition>
        <argsstring>(string key, int timeout)</argsstring>
        <name>BRPOP</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BRPOP</para>
<para>Remove and get the last element in a list, or block until one is available</para>
<para>Time complexity: O(1) Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3353" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3353" bodyend="3363" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="152" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a2b9c8096beeb08b5721e668555c7fea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BRPOPLPUSH</definition>
        <argsstring>(string source, string destination, int timeout)</argsstring>
        <name>BRPOPLPUSH</name>
        <param>
          <type>string</type>
          <declname>source</declname>
        </param>
        <param>
          <type>string</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BRPOPLPUSH</para>
<para>Pop a value from a list, push it to another list and return it; or block until one is available</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3365" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3365" bodyend="3379" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="166" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a8c240c5acffdc7c10826d8db38b03d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BZPOPMIN</definition>
        <argsstring>(string key, int timeout)</argsstring>
        <name>BZPOPMIN</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BZPOPMIN</para>
<para>Remove and return the member with the lowest score from one or more sorted sets, or block until one is available</para>
<para>Time complexity: O(log(N)) with N being the number of elements in the sorted set. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3381" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3381" bodyend="3391" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="183" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a6e75b89da73816241d1b4ebb721b094f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BZPOPMAX</definition>
        <argsstring>(string key, int timeout)</argsstring>
        <name>BZPOPMAX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BZPOPMAX</para>
<para>Remove and return the member with the highest score from one or more sorted sets, or block until one is available</para>
<para>Time complexity: O(log(N)) with N being the number of elements in the sorted set. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3393" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3393" bodyend="3403" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="197" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a247fcd0ec8cfcd87384ee5c8429b27df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLIENT_ID</definition>
        <argsstring>()</argsstring>
        <name>CLIENT_ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLIENT_ID</para>
<para>Returns the client ID for the current connection</para>
<para>Time complexity: O(1) Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3405" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3405" bodyend="3409" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="211" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a472743b192cb2cd54ce146e860c56c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLIENT_KILL</definition>
        <argsstring>(string ip_port=&quot;&quot;, int id_client_id=0, string addr_ip_port=&quot;&quot;, string skipme_yes_no=&quot;&quot;)</argsstring>
        <name>CLIENT_KILL</name>
        <param>
          <type>string</type>
          <declname>ip_port</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>id_client_id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>addr_ip_port</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>skipme_yes_no</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLIENT_KILL</para>
<para>Kill the connection of a client</para>
<para>Time complexity: O(N) where N is the number of client connections Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3411" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3411" bodyend="3425" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="221" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a33612ed4aee117cdf6639ddedc072f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLIENT_LIST</definition>
        <argsstring>()</argsstring>
        <name>CLIENT_LIST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLIENT_LIST</para>
<para>Get the list of client connections</para>
<para>Time complexity: O(N) where N is the number of client connections Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3427" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3427" bodyend="3431" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="237" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ab64b40849418004caad0d9800375dec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLIENT_GETNAME</definition>
        <argsstring>()</argsstring>
        <name>CLIENT_GETNAME</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLIENT_GETNAME</para>
<para>Get the current connection name</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3433" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3433" bodyend="3437" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="247" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a7c34c138b876ebec78f61720f441ad7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLIENT_PAUSE</definition>
        <argsstring>(int timeout)</argsstring>
        <name>CLIENT_PAUSE</name>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLIENT_PAUSE</para>
<para>Stop processing commands from clients for some time</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3439" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3439" bodyend="3447" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="257" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a5b7b5f1a4e6640f085bb558c1a25fc30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLIENT_REPLY</definition>
        <argsstring>(string reply_mode)</argsstring>
        <name>CLIENT_REPLY</name>
        <param>
          <type>string</type>
          <declname>reply_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLIENT_REPLY</para>
<para>Instruct the server whether to reply to commands</para>
<para>Time complexity: O(1)</para>
<para><itemizedlist>
<listitem><para>Valid values for reply_mode: &quot;ON&quot;, &quot;OFF&quot;, &quot;SKIP&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3449" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3449" bodyend="3457" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="272" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aa80a57c7935dedc5f912f264b9e2ea80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLIENT_SETNAME</definition>
        <argsstring>(string connection_name)</argsstring>
        <name>CLIENT_SETNAME</name>
        <param>
          <type>string</type>
          <declname>connection_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLIENT_SETNAME</para>
<para>Set the current connection name</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3459" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3459" bodyend="3466" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="285" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a4f3c43c2de281fd31b4d86e1674d8270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLIENT_UNBLOCK</definition>
        <argsstring>(string client_id, string unblock_type=&quot;&quot;)</argsstring>
        <name>CLIENT_UNBLOCK</name>
        <param>
          <type>string</type>
          <declname>client_id</declname>
        </param>
        <param>
          <type>string</type>
          <declname>unblock_type</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLIENT_UNBLOCK</para>
<para>Unblock a client blocked in a blocking command from a different connection</para>
<para>Time complexity: O(log N) where N is the number of client connections</para>
<para><itemizedlist>
<listitem><para>Valid values for unblock_type: &quot;TIMEOUT&quot;, &quot;ERROR&quot; Annotated return value: </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3468" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3468" bodyend="3478" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="299" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae44ed2a625234a957f29d7de1b42520a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_ADDSLOTS</definition>
        <argsstring>(int slot)</argsstring>
        <name>CLUSTER_ADDSLOTS</name>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_ADDSLOTS</para>
<para>Assign new hash slots to receiving node</para>
<para>Time complexity: O(N) where N is the total number of hash slot arguments Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3480" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3480" bodyend="3488" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="313" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a7387cefff8e3a0d7c76bcb57eda0f2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_COUNT_FAILURE_REPORTS</definition>
        <argsstring>(string node_id)</argsstring>
        <name>CLUSTER_COUNT_FAILURE_REPORTS</name>
        <param>
          <type>string</type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_COUNT_FAILURE_REPORTS</para>
<para>Return the number of failure reports active for a given node</para>
<para>Time complexity: O(N) where N is the number of failure reports Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3490" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3490" bodyend="3497" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="326" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a165b5882ccd88192902783f3a41bc739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_COUNTKEYSINSLOT</definition>
        <argsstring>(int slot)</argsstring>
        <name>CLUSTER_COUNTKEYSINSLOT</name>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_COUNTKEYSINSLOT</para>
<para>Return the number of local keys in the specified hash slot</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3499" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3499" bodyend="3507" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="338" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1adeb2f9a3935768c1e1f3b5d346d02b38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_DELSLOTS</definition>
        <argsstring>(int slot)</argsstring>
        <name>CLUSTER_DELSLOTS</name>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_DELSLOTS</para>
<para>Set hash slots as unbound in receiving node</para>
<para>Time complexity: O(N) where N is the total number of hash slot arguments Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3509" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3509" bodyend="3517" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="351" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a6f59c95438f8193ebf26d55e9a5c03a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_FAILOVER</definition>
        <argsstring>(string options=&quot;&quot;)</argsstring>
        <name>CLUSTER_FAILOVER</name>
        <param>
          <type>string</type>
          <declname>options</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_FAILOVER</para>
<para>Forces a replica to perform a manual failover of its master.</para>
<para>Time complexity: O(1)</para>
<para><itemizedlist>
<listitem><para>Valid values for options: &quot;FORCE&quot;, &quot;TAKEOVER&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3519" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3519" bodyend="3527" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="366" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a1e432e478644b80a2c800e37d151bf43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_FORGET</definition>
        <argsstring>(string node_id)</argsstring>
        <name>CLUSTER_FORGET</name>
        <param>
          <type>string</type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_FORGET</para>
<para>Remove a node from the nodes table</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3529" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3529" bodyend="3536" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="379" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a1e5b60c3f73cf5ad6682455329028646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_GETKEYSINSLOT</definition>
        <argsstring>(int slot, int count)</argsstring>
        <name>CLUSTER_GETKEYSINSLOT</name>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_GETKEYSINSLOT</para>
<para>Return local key names in the specified hash slot</para>
<para>Time complexity: O(log(N)) where N is the number of requested keys Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3538" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3538" bodyend="3549" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="391" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a17db5fc0aa1b751f6b500ac6d2e25c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_INFO</definition>
        <argsstring>()</argsstring>
        <name>CLUSTER_INFO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_INFO</para>
<para>Provides info about Redis Cluster node state</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3551" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3551" bodyend="3555" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="406" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a2e98120c0a52470ca8518796db8d0af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_KEYSLOT</definition>
        <argsstring>(string key)</argsstring>
        <name>CLUSTER_KEYSLOT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_KEYSLOT</para>
<para>Returns the hash slot of the specified key</para>
<para>Time complexity: O(N) where N is the number of bytes in the key Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3557" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3557" bodyend="3564" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="416" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1af15545f2b874e9ee02b6d3cc37434fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_MEET</definition>
        <argsstring>(string ip, int port)</argsstring>
        <name>CLUSTER_MEET</name>
        <param>
          <type>string</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_MEET</para>
<para>Force a node cluster to handshake with another node</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3566" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3566" bodyend="3576" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="428" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1adc8fe325b85f40c861f5a0e044c39f59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_NODES</definition>
        <argsstring>()</argsstring>
        <name>CLUSTER_NODES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_NODES</para>
<para>Get Cluster config for the node</para>
<para>Time complexity: O(N) where N is the total number of Cluster nodes Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3578" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3578" bodyend="3582" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="442" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a4c3b0074ba5759bfc4d0b099aa7ae7e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_REPLICATE</definition>
        <argsstring>(string node_id)</argsstring>
        <name>CLUSTER_REPLICATE</name>
        <param>
          <type>string</type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_REPLICATE</para>
<para>Reconfigure a node as a replica of the specified master node</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3584" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3584" bodyend="3591" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="452" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a841e8753c4c6e15385c499d579464403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_RESET</definition>
        <argsstring>(string reset_type=&quot;&quot;)</argsstring>
        <name>CLUSTER_RESET</name>
        <param>
          <type>string</type>
          <declname>reset_type</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_RESET</para>
<para>Reset a Redis Cluster node</para>
<para>Time complexity: O(N) where N is the number of known nodes. The command may execute a FLUSHALL as a side effect.</para>
<para><itemizedlist>
<listitem><para>Valid values for reset_type: &quot;HARD&quot;, &quot;SOFT&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3593" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3593" bodyend="3601" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="467" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a71ae081dd46a4567665a8b6eb3a83e6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_SAVECONFIG</definition>
        <argsstring>()</argsstring>
        <name>CLUSTER_SAVECONFIG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_SAVECONFIG</para>
<para>Forces the node to save cluster state on disk</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3603" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3603" bodyend="3607" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="480" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aefb1fe0e85b177ae6c1400f8d964d18e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_SET_CONFIG_EPOCH</definition>
        <argsstring>(int config_epoch)</argsstring>
        <name>CLUSTER_SET_CONFIG_EPOCH</name>
        <param>
          <type>int</type>
          <declname>config_epoch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_SET_CONFIG_EPOCH</para>
<para>Set the configuration epoch in a new node</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3609" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3609" bodyend="3617" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="490" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a753f9182d791897b9f08f44af4072698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_SETSLOT</definition>
        <argsstring>(int slot, string subcommand, string node_id=&quot;&quot;)</argsstring>
        <name>CLUSTER_SETSLOT</name>
        <param>
          <type>int</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>string</type>
          <declname>subcommand</declname>
        </param>
        <param>
          <type>string</type>
          <declname>node_id</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_SETSLOT</para>
<para>Bind a hash slot to a specific node</para>
<para>Time complexity: O(1)</para>
<para><itemizedlist>
<listitem><para>Valid values for subcommand: &quot;IMPORTING&quot;, &quot;MIGRATING&quot;, &quot;STABLE&quot;, &quot;NODE&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3619" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3619" bodyend="3632" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="505" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac159a58b9aa44fbf3917d2cd972c1451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_SLAVES</definition>
        <argsstring>(string node_id)</argsstring>
        <name>CLUSTER_SLAVES</name>
        <param>
          <type>string</type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_SLAVES</para>
<para>List replica nodes of the specified master node</para>
<para>Time complexity: O(1) Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3634" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3634" bodyend="3641" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="521" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a7b218ed3bfad21df641c320e44bbb1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_REPLICAS</definition>
        <argsstring>(string node_id)</argsstring>
        <name>CLUSTER_REPLICAS</name>
        <param>
          <type>string</type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_REPLICAS</para>
<para>List replica nodes of the specified master node</para>
<para>Time complexity: O(1) Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3643" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3643" bodyend="3650" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="533" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a1b0dbeebc1457524f2dc71277b469c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CLUSTER_SLOTS</definition>
        <argsstring>()</argsstring>
        <name>CLUSTER_SLOTS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CLUSTER_SLOTS</para>
<para>Get array of Cluster slot to node mappings</para>
<para>Time complexity: O(N) where N is the total number of Cluster nodes Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3652" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3652" bodyend="3656" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="545" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a87328424ab16c54258225a532f149ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int COMMAND</definition>
        <argsstring>()</argsstring>
        <name>COMMAND</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>COMMAND</para>
<para>Get array of Redis command details</para>
<para>Time complexity: O(N) where N is the total number of Redis commands Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3658" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3658" bodyend="3662" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="555" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a052706b9124767a3b96c4573447715e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int COMMAND_COUNT</definition>
        <argsstring>()</argsstring>
        <name>COMMAND_COUNT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>COMMAND_COUNT</para>
<para>Get total number of Redis commands</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3664" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3664" bodyend="3668" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="565" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a635fbabfc448fceb0740eb69aa3ae70d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int COMMAND_GETKEYS</definition>
        <argsstring>()</argsstring>
        <name>COMMAND_GETKEYS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>COMMAND_GETKEYS</para>
<para>Extract keys given a full Redis command</para>
<para>Time complexity: O(N) where N is the number of arguments to the command Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3670" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3670" bodyend="3674" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="575" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a284b7d047987457c5acf3e5b39f4016a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int COMMAND_INFO</definition>
        <argsstring>(string command_name)</argsstring>
        <name>COMMAND_INFO</name>
        <param>
          <type>string</type>
          <declname>command_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>COMMAND_INFO</para>
<para>Get array of specific Redis command details</para>
<para>Time complexity: O(N) when N is number of commands to look up Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3676" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3676" bodyend="3683" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="585" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a726694815b02a09a96f974d19547860f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONFIG_GET</definition>
        <argsstring>(string parameter)</argsstring>
        <name>CONFIG_GET</name>
        <param>
          <type>string</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONFIG_GET</para>
<para>Get the value of a configuration parameter Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3685" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3685" bodyend="3692" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="595" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aeecb99ea593e92fd539d68343df04240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONFIG_REWRITE</definition>
        <argsstring>()</argsstring>
        <name>CONFIG_REWRITE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONFIG_REWRITE</para>
<para>Rewrite the configuration file with the in memory configuration Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3694" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3694" bodyend="3698" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="605" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a1af006c9794f2b37aedafc9143635fca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONFIG_SET</definition>
        <argsstring>(string parameter, string value)</argsstring>
        <name>CONFIG_SET</name>
        <param>
          <type>string</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONFIG_SET</para>
<para>Set a configuration parameter to the given value Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3700" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3700" bodyend="3709" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="613" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9efd81c221ab6e0d8bb497987bcdef7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CONFIG_RESETSTAT</definition>
        <argsstring>()</argsstring>
        <name>CONFIG_RESETSTAT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONFIG_RESETSTAT</para>
<para>Reset the stats returned by INFO</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3711" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3711" bodyend="3715" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="626" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a98da7d5716f13127cb481d86d06fb42c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DBSIZE</definition>
        <argsstring>()</argsstring>
        <name>DBSIZE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DBSIZE</para>
<para>Return the number of keys in the selected database Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3717" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3717" bodyend="3721" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="634" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1af2f46bcd914140eeb49598d63951c3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DEBUG_OBJECT</definition>
        <argsstring>(string key)</argsstring>
        <name>DEBUG_OBJECT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DEBUG_OBJECT</para>
<para>Get debugging information about a key Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3723" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3723" bodyend="3730" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="642" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a75471cc30c7a700b5145f4824b77f053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DEBUG_SEGFAULT</definition>
        <argsstring>()</argsstring>
        <name>DEBUG_SEGFAULT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DEBUG_SEGFAULT</para>
<para>Make the server crash Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3732" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3732" bodyend="3736" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="652" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1af98804c25dbb680a54e50c62b06fa05b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DECR</definition>
        <argsstring>(string key)</argsstring>
        <name>DECR</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DECR</para>
<para>Decrement the integer value of a key by one</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3738" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3738" bodyend="3745" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="662" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9cf0c607c7debf92224adb2853161f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DECRBY</definition>
        <argsstring>(string key, int decrement)</argsstring>
        <name>DECRBY</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>decrement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DECRBY</para>
<para>Decrement the integer value of a key by the given number</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3747" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3747" bodyend="3757" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="674" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a8f16bec7bd796e3490a8abbd9feb0f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DEL</definition>
        <argsstring>(string key)</argsstring>
        <name>DEL</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DEL</para>
<para>Delete a key</para>
<para>Time complexity: O(N) where N is the number of keys that will be removed. When a key to remove holds a value other than a string, the individual complexity for this key is O(M) where M is the number of elements in the list, set, sorted set or hash. Removing a single key that holds a string value is O(1). Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3759" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3759" bodyend="3766" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="691" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a0711873ab5ab313bdf85f9a385eac80f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DISCARD</definition>
        <argsstring>()</argsstring>
        <name>DISCARD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DISCARD</para>
<para>Discard all commands issued after MULTI Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3768" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3768" bodyend="3772" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="701" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac45dccd86cae41535f1a1cc466839509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DUMP</definition>
        <argsstring>(string key)</argsstring>
        <name>DUMP</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DUMP</para>
<para>Return a serialized version of the value stored at the specified key.</para>
<para>Time complexity: O(1) to access the key and additional O(N*M) to serialized it, where N is the number of Redis objects composing the value and M their average size. For small string values the time complexity is thus O(1)+O(1*M) where M is small, so simply O(1). Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3774" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3774" bodyend="3781" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="714" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9cb082433f38344c6170aa95400afa7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ECHO</definition>
        <argsstring>(string message)</argsstring>
        <name>ECHO</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ECHO</para>
<para>Echo the given string Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3783" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3783" bodyend="3790" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="724" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a1aaf78e5d191a48bed74f7394ef2bca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EVAL</definition>
        <argsstring>(string script, int numkeys, string key, string arg)</argsstring>
        <name>EVAL</name>
        <param>
          <type>string</type>
          <declname>script</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numkeys</declname>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>EVAL</para>
<para>Execute a Lua script server side</para>
<para>Time complexity: Depends on the script that is executed. Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3792" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3792" bodyend="3806" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="736" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a0345d498ec3c04bcf6fc66da3e849eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EVALSHA</definition>
        <argsstring>(string sha1, int numkeys, string key, string arg)</argsstring>
        <name>EVALSHA</name>
        <param>
          <type>string</type>
          <declname>sha1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numkeys</declname>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>EVALSHA</para>
<para>Execute a Lua script server side</para>
<para>Time complexity: Depends on the script that is executed. Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3808" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3808" bodyend="3822" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="752" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aaa601d03e6111fa67670be0e14aa9bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EXEC</definition>
        <argsstring>()</argsstring>
        <name>EXEC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>EXEC</para>
<para>Execute all commands issued after MULTI Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3824" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3824" bodyend="3828" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="766" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1afb3937256478125b9a0a5afcbacedd73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EXISTS</definition>
        <argsstring>(string key)</argsstring>
        <name>EXISTS</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>EXISTS</para>
<para>Determine if a key exists</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3830" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3830" bodyend="3837" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="776" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a81c56a4be8401235aea2b743712d26a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EXPIRE</definition>
        <argsstring>(string key, int seconds)</argsstring>
        <name>EXPIRE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>EXPIRE</para>
<para>Set a key&apos;s time to live in seconds</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3839" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3839" bodyend="3849" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="788" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a02c9479d34b11b3a3f30a0bc085b7e17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EXPIREAT</definition>
        <argsstring>(string key, string timestamp)</argsstring>
        <name>EXPIREAT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>EXPIREAT</para>
<para>Set the expiration for a key as a UNIX timestamp</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3851" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3851" bodyend="3861" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="802" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aca3002c3a5361f14abbb146c877bd1ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FLUSHALL</definition>
        <argsstring>(string async=&quot;&quot;)</argsstring>
        <name>FLUSHALL</name>
        <param>
          <type>string</type>
          <declname>async</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLUSHALL</para>
<para>Remove all keys from all databases</para>
<para><itemizedlist>
<listitem><para>Valid values for async: &quot;ASYNC&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3863" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3863" bodyend="3871" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="816" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1abebbb105482c9e1ae315e9228ab0e7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FLUSHDB</definition>
        <argsstring>(string async=&quot;&quot;)</argsstring>
        <name>FLUSHDB</name>
        <param>
          <type>string</type>
          <declname>async</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FLUSHDB</para>
<para>Remove all keys from the current database</para>
<para><itemizedlist>
<listitem><para>Valid values for async: &quot;ASYNC&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3873" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3873" bodyend="3881" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="829" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a3744b71d4fa9b9363fdc997909a864a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GEOADD</definition>
        <argsstring>(string key, float longitude, float latitude, string member)</argsstring>
        <name>GEOADD</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>longitude</declname>
        </param>
        <param>
          <type>float</type>
          <declname>latitude</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GEOADD</para>
<para>Add one or more geospatial items in the geospatial index represented using a sorted set</para>
<para>Time complexity: O(log(N)) for each item added, where N is the number of elements in the sorted set. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3883" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3883" bodyend="3898" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="843" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a45aadab55c525e4684658c94b3ae0f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GEOHASH</definition>
        <argsstring>(string key, string member)</argsstring>
        <name>GEOHASH</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GEOHASH</para>
<para>Returns members of a geospatial index as standard geohash strings</para>
<para>Time complexity: O(log(N)) for each member requested, where N is the number of elements in the sorted set. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3900" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3900" bodyend="3909" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="861" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aec2eeb0a9594a51ef04a484fcec5ec85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GEOPOS</definition>
        <argsstring>(string key, string member)</argsstring>
        <name>GEOPOS</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GEOPOS</para>
<para>Returns longitude and latitude of members of a geospatial index</para>
<para>Time complexity: O(log(N)) for each member requested, where N is the number of elements in the sorted set. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3911" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3911" bodyend="3920" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="875" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a40db82e7d1ef791e660aad47632735e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GEODIST</definition>
        <argsstring>(string key, string member1, string member2, string unit=&quot;&quot;)</argsstring>
        <name>GEODIST</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member1</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member2</declname>
        </param>
        <param>
          <type>string</type>
          <declname>unit</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GEODIST</para>
<para>Returns the distance between two members of a geospatial index</para>
<para>Time complexity: O(log(N)) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3922" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3922" bodyend="3935" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="888" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9b811303e0835cdacf528183a73a790f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GEORADIUS</definition>
        <argsstring>(string key, float longitude, float latitude, float radius, string unit, string withcoord=&quot;&quot;, string withdist=&quot;&quot;, string withhash=&quot;&quot;, int count_count=0, string order=&quot;&quot;, string store_key=&quot;&quot;, string storedist_key=&quot;&quot;)</argsstring>
        <name>GEORADIUS</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>longitude</declname>
        </param>
        <param>
          <type>float</type>
          <declname>latitude</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>string</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>string</type>
          <declname>withcoord</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>withdist</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>withhash</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>count_count</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>order</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>store_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>storedist_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GEORADIUS</para>
<para>Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a point</para>
<para>Time complexity: O(N+log(M)) where N is the number of elements inside the bounding box of the circular area delimited by center and radius and M is the number of items inside the index.</para>
<para><itemizedlist>
<listitem><para>Valid values for unit: &quot;m&quot;, &quot;km&quot;, &quot;ft&quot;, &quot;mi&quot;</para>
</listitem><listitem><para>Valid values for withcoord: &quot;WITHCOORD&quot;</para>
</listitem><listitem><para>Valid values for withdist: &quot;WITHDIST&quot;</para>
</listitem><listitem><para>Valid values for withhash: &quot;WITHHASH&quot;</para>
</listitem><listitem><para>Valid values for order: &quot;ASC&quot;, &quot;DESC&quot; Annotated return value: array </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3937" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3937" bodyend="3977" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="915" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae76e50982756c8c36c308c154a44c6cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GEORADIUSBYMEMBER</definition>
        <argsstring>(string key, string member, float radius, string unit, string withcoord=&quot;&quot;, string withdist=&quot;&quot;, string withhash=&quot;&quot;, int count_count=0, string order=&quot;&quot;, string store_key=&quot;&quot;, string storedist_key=&quot;&quot;)</argsstring>
        <name>GEORADIUSBYMEMBER</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>string</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>string</type>
          <declname>withcoord</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>withdist</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>withhash</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>count_count</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>order</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>store_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>storedist_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GEORADIUSBYMEMBER</para>
<para>Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a member</para>
<para>Time complexity: O(N+log(M)) where N is the number of elements inside the bounding box of the circular area delimited by center and radius and M is the number of items inside the index.</para>
<para><itemizedlist>
<listitem><para>Valid values for unit: &quot;m&quot;, &quot;km&quot;, &quot;ft&quot;, &quot;mi&quot;</para>
</listitem><listitem><para>Valid values for withcoord: &quot;WITHCOORD&quot;</para>
</listitem><listitem><para>Valid values for withdist: &quot;WITHDIST&quot;</para>
</listitem><listitem><para>Valid values for withhash: &quot;WITHHASH&quot;</para>
</listitem><listitem><para>Valid values for order: &quot;ASC&quot;, &quot;DESC&quot; Annotated return value: </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="3979" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="3979" bodyend="4015" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="961" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a3ef0bab4ce4f18dff779e435a21a0145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GET</definition>
        <argsstring>(string key)</argsstring>
        <name>GET</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GET</para>
<para>Get the value of a key</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4017" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4017" bodyend="4024" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="992" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a71f5308ce35c90b21c13642778d1936a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GETBIT</definition>
        <argsstring>(string key, int offset)</argsstring>
        <name>GETBIT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GETBIT</para>
<para>Returns the bit value at offset in the string value stored at key</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4026" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4026" bodyend="4036" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1004" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1adceda53de8c2d5e1cb03b55dfe00436d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GETRANGE</definition>
        <argsstring>(string key, int start, int end)</argsstring>
        <name>GETRANGE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GETRANGE</para>
<para>Get a substring of the string stored at a key</para>
<para>Time complexity: O(N) where N is the length of the returned string. The complexity is ultimately determined by the returned length, but because creating a substring from an existing string is very cheap, it can be considered O(1) for small strings. Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4038" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4038" bodyend="4051" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1021" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a22ff63475aafe0b74924663c682d4d17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GETSET</definition>
        <argsstring>(string key, string value)</argsstring>
        <name>GETSET</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GETSET</para>
<para>Set the string value of a key and return its old value</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4053" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4053" bodyend="4062" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1037" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac1208d18d74e7eddf28b63f14215e9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HDEL</definition>
        <argsstring>(string key, string field)</argsstring>
        <name>HDEL</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HDEL</para>
<para>Delete one or more hash fields</para>
<para>Time complexity: O(N) where N is the number of fields to be removed. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4064" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4064" bodyend="4073" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1050" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a861c11332fc8d99344cffabac7036913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HEXISTS</definition>
        <argsstring>(string key, string field)</argsstring>
        <name>HEXISTS</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HEXISTS</para>
<para>Determine if a hash field exists</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4075" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4075" bodyend="4084" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1063" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aa97b7f8a8219f95b0a5d1170c099399d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HGET</definition>
        <argsstring>(string key, string field)</argsstring>
        <name>HGET</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HGET</para>
<para>Get the value of a hash field</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4086" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4086" bodyend="4095" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1076" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a8de0aaac947c4a485f229c7e91f94284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HGETALL</definition>
        <argsstring>(string key)</argsstring>
        <name>HGETALL</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HGETALL</para>
<para>Get all the fields and values in a hash</para>
<para>Time complexity: O(N) where N is the size of the hash. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4097" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4097" bodyend="4104" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1089" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a77e0e11be54d37807a0144524da8f193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HINCRBY</definition>
        <argsstring>(string key, string field, int increment)</argsstring>
        <name>HINCRBY</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>increment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HINCRBY</para>
<para>Increment the integer value of a hash field by the given number</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4106" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4106" bodyend="4118" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1101" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1acf6002851838b48e651fb7c6143a6307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HINCRBYFLOAT</definition>
        <argsstring>(string key, string field, float increment)</argsstring>
        <name>HINCRBYFLOAT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>float</type>
          <declname>increment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HINCRBYFLOAT</para>
<para>Increment the float value of a hash field by the given amount</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4120" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4120" bodyend="4132" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1116" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a995f39f4ef381e638ca531afe9ee0b94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HKEYS</definition>
        <argsstring>(string key)</argsstring>
        <name>HKEYS</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HKEYS</para>
<para>Get all the fields in a hash</para>
<para>Time complexity: O(N) where N is the size of the hash. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4134" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4134" bodyend="4141" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1131" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a19d6271f016a58f991089ab8d5a87860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HLEN</definition>
        <argsstring>(string key)</argsstring>
        <name>HLEN</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HLEN</para>
<para>Get the number of fields in a hash</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4143" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4143" bodyend="4150" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1143" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a17b9dfcc5cb7170f358f2156f090434c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HMGET</definition>
        <argsstring>(string key, string field)</argsstring>
        <name>HMGET</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HMGET</para>
<para>Get the values of all the given hash fields</para>
<para>Time complexity: O(N) where N is the number of fields being requested. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4152" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4152" bodyend="4161" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1155" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a1227844f9e9ec05b98972733836c9b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HMSET</definition>
        <argsstring>(string key, string field, string value)</argsstring>
        <name>HMSET</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HMSET</para>
<para>Set multiple hash fields to multiple values</para>
<para>Time complexity: O(N) where N is the number of fields being set. Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4163" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4163" bodyend="4174" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1168" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1acc547f11a874fd99ba81759b9e381000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HSET</definition>
        <argsstring>(string key, string field, string value)</argsstring>
        <name>HSET</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HSET</para>
<para>Set the string value of a hash field</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4176" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4176" bodyend="4187" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1182" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1adcc16e58d2a84ea7265bd5d990f5a6f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HSETNX</definition>
        <argsstring>(string key, string field, string value)</argsstring>
        <name>HSETNX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HSETNX</para>
<para>Set the value of a hash field, only if the field does not exist</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4189" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4189" bodyend="4200" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1196" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9cea74ec316cbd7509668986370efe19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HSTRLEN</definition>
        <argsstring>(string key, string field)</argsstring>
        <name>HSTRLEN</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HSTRLEN</para>
<para>Get the length of the value of a hash field</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4202" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4202" bodyend="4211" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1210" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aee29cdc7c756f72fd6e793ababec2124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HVALS</definition>
        <argsstring>(string key)</argsstring>
        <name>HVALS</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HVALS</para>
<para>Get all the values in a hash</para>
<para>Time complexity: O(N) where N is the size of the hash. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4213" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4213" bodyend="4220" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1223" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a31335d5e2b3d98dddccb45f6d9c08c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int INCR</definition>
        <argsstring>(string key)</argsstring>
        <name>INCR</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>INCR</para>
<para>Increment the integer value of a key by one</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4222" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4222" bodyend="4229" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1235" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a5f502f954f83f6e4f7bd53bbcfee84ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int INCRBY</definition>
        <argsstring>(string key, int increment)</argsstring>
        <name>INCRBY</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>increment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>INCRBY</para>
<para>Increment the integer value of a key by the given amount</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4231" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4231" bodyend="4241" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1247" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a4ad8148dd2cd11295a7729daec27513b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int INCRBYFLOAT</definition>
        <argsstring>(string key, float increment)</argsstring>
        <name>INCRBYFLOAT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>increment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>INCRBYFLOAT</para>
<para>Increment the float value of a key by the given amount</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4243" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4243" bodyend="4253" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1261" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a335f261a68a0af560bd2a712525e8ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int INFO</definition>
        <argsstring>(string section=&quot;&quot;)</argsstring>
        <name>INFO</name>
        <param>
          <type>string</type>
          <declname>section</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>INFO</para>
<para>Get information and statistics about the server Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4255" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4255" bodyend="4262" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1273" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a6f85b787e98e995fb3e5b50604ae3245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int KEYS</definition>
        <argsstring>(string pattern)</argsstring>
        <name>KEYS</name>
        <param>
          <type>string</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>KEYS</para>
<para>Find all keys matching the given pattern</para>
<para>Time complexity: O(N) with N being the number of keys in the database, under the assumption that the key names in the database and the given pattern have limited length. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4264" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4264" bodyend="4271" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1287" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae9e1ff299893c4b141ec557f51676745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LASTSAVE</definition>
        <argsstring>()</argsstring>
        <name>LASTSAVE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LASTSAVE</para>
<para>Get the UNIX time stamp of the last successful save to disk Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4273" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4273" bodyend="4277" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1297" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a0f748e83fa81a30c644930a241fe08e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LINDEX</definition>
        <argsstring>(string key, int index)</argsstring>
        <name>LINDEX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LINDEX</para>
<para>Get an element from a list by its index</para>
<para>Time complexity: O(N) where N is the number of elements to traverse to get to the element at index. This makes asking for the first or the last element of the list O(1). Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4279" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4279" bodyend="4289" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1308" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a4cc399f43d81b5490e44e521e6186a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LINSERT</definition>
        <argsstring>(string key, string where, string pivot, string value)</argsstring>
        <name>LINSERT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>where</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pivot</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LINSERT</para>
<para>Insert an element before or after another element in a list</para>
<para>Time complexity: O(N) where N is the number of elements to traverse before seeing the value pivot. This means that inserting somewhere on the left end on the list (head) can be considered O(1) and inserting somewhere on the right end (tail) is O(N).</para>
<para><itemizedlist>
<listitem><para>Valid values for where: &quot;BEFORE&quot;, &quot;AFTER&quot; Annotated return value: integer </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4291" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4291" bodyend="4305" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1327" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a389ba4a3d5f1438de8ced69bb34a314e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LLEN</definition>
        <argsstring>(string key)</argsstring>
        <name>LLEN</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LLEN</para>
<para>Get the length of a list</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4307" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4307" bodyend="4314" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1343" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac9e1458cdd6ab51366f5257d41d985e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LPOP</definition>
        <argsstring>(string key)</argsstring>
        <name>LPOP</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LPOP</para>
<para>Remove and get the first element in a list</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4316" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4316" bodyend="4323" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1355" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9f66318e878dab1a27896c1a18a3f242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LPUSH</definition>
        <argsstring>(string key, string value)</argsstring>
        <name>LPUSH</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LPUSH</para>
<para>Prepend one or multiple values to a list</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4325" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4325" bodyend="4334" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1367" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a174c161c43361ee07e4c62c38e584bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LPUSHX</definition>
        <argsstring>(string key, string value)</argsstring>
        <name>LPUSHX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LPUSHX</para>
<para>Prepend a value to a list, only if the list exists</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4336" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4336" bodyend="4345" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1380" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a70b208d5264f80de9032ebfb3d5d8f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LRANGE</definition>
        <argsstring>(string key, int start, int stop)</argsstring>
        <name>LRANGE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LRANGE</para>
<para>Get a range of elements from a list</para>
<para>Time complexity: O(S+N) where S is the distance of start offset from HEAD for small lists, from nearest end (HEAD or TAIL) for large lists; and N is the number of elements in the specified range. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4347" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4347" bodyend="4360" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1395" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a941c378174461fc7c838922c172b6650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LREM</definition>
        <argsstring>(string key, int count, string value)</argsstring>
        <name>LREM</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LREM</para>
<para>Remove elements from a list</para>
<para>Time complexity: O(N) where N is the length of the list. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4362" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4362" bodyend="4374" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1411" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a8b15b3f807aa5105387a246b9a8fef72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LSET</definition>
        <argsstring>(string key, int index, string value)</argsstring>
        <name>LSET</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LSET</para>
<para>Set the value of an element in a list by its index</para>
<para>Time complexity: O(N) where N is the length of the list. Setting either the first or the last element of the list is O(1). Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4376" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4376" bodyend="4388" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1427" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a47c101d9768b1c7cda47660f6cbb3b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LTRIM</definition>
        <argsstring>(string key, int start, int stop)</argsstring>
        <name>LTRIM</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LTRIM</para>
<para>Trim a list to the specified range</para>
<para>Time complexity: O(N) where N is the number of elements to be removed by the operation. Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4390" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4390" bodyend="4403" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1442" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ab0e5ac6a7bd9b43d84d4968a2c73a8e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MEMORY_DOCTOR</definition>
        <argsstring>()</argsstring>
        <name>MEMORY_DOCTOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MEMORY_DOCTOR</para>
<para>Outputs memory problems report Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4405" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4405" bodyend="4409" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1456" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aa9621cb7a972254bd1b263fa5c0a2032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MEMORY_HELP</definition>
        <argsstring>()</argsstring>
        <name>MEMORY_HELP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MEMORY_HELP</para>
<para>Show helpful text about the different subcommands Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4411" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4411" bodyend="4415" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1464" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae1f7076bfe8a702387f1cd24c2386a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MEMORY_MALLOC_STATS</definition>
        <argsstring>()</argsstring>
        <name>MEMORY_MALLOC_STATS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MEMORY_MALLOC_STATS</para>
<para>Show allocator internal stats Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4417" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4417" bodyend="4421" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1472" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a08fc9dcb346f533e2dace8df76b8899a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MEMORY_PURGE</definition>
        <argsstring>()</argsstring>
        <name>MEMORY_PURGE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MEMORY_PURGE</para>
<para>Ask the allocator to release memory Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4423" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4423" bodyend="4427" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1480" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a32ec1b29c4993b3938ca3a9896eb0d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MEMORY_STATS</definition>
        <argsstring>()</argsstring>
        <name>MEMORY_STATS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MEMORY_STATS</para>
<para>Show memory usage details Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4429" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4429" bodyend="4433" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1488" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae00d293d2f7c84f869c1187a46aa2535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MEMORY_USAGE</definition>
        <argsstring>(string key, int samples_count=0)</argsstring>
        <name>MEMORY_USAGE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>samples_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MEMORY_USAGE</para>
<para>Estimate the memory usage of a key</para>
<para>Time complexity: O(N) where N is the number of samples. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4435" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4435" bodyend="4445" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1498" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae3b9bd7019fa1ee5253799f1195080eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MGET</definition>
        <argsstring>(string key)</argsstring>
        <name>MGET</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MGET</para>
<para>Get the values of all the given keys</para>
<para>Time complexity: O(N) where N is the number of keys to retrieve. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4447" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4447" bodyend="4454" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1512" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9395e8513b2154971bd49097ffd169b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MIGRATE</definition>
        <argsstring>(string host, string port, string key, int destination_db, int timeout, string copy=&quot;&quot;, string replace=&quot;&quot;, string auth_password=&quot;&quot;, string keys_key=&quot;&quot;)</argsstring>
        <name>MIGRATE</name>
        <param>
          <type>string</type>
          <declname>host</declname>
        </param>
        <param>
          <type>string</type>
          <declname>port</declname>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>destination_db</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>string</type>
          <declname>copy</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>replace</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>auth_password</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>keys_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MIGRATE</para>
<para>Atomically transfer a key from a Redis instance to another one.</para>
<para>Time complexity: This command actually executes a DUMP+DEL in the source instance, and a RESTORE in the target instance. See the pages of these commands for time complexity. Also an O(N) data transfer between the two instances is performed.</para>
<para><itemizedlist>
<listitem><para>Valid values for key: &quot;key&quot;, &quot;\&quot;""</para>
</listitem><listitem><para>Valid values for copy: &quot;COPY&quot;</para>
</listitem><listitem><para>Valid values for replace: &quot;REPLACE&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4456" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4456" bodyend="4485" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1533" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a52865512b0c121d1d54496361db2659a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MONITOR</definition>
        <argsstring>()</argsstring>
        <name>MONITOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MONITOR</para>
<para>Listen for all requests received by the server in real time Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4487" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4487" bodyend="4491" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1557" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae888bfa43e68f708e49eef4c082df544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MOVE</definition>
        <argsstring>(string key, int db)</argsstring>
        <name>MOVE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MOVE</para>
<para>Move a key to another database</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4493" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4493" bodyend="4503" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1567" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9c5d692d4663f557fa84c71b0fe76732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MSET</definition>
        <argsstring>(string key, string value)</argsstring>
        <name>MSET</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MSET</para>
<para>Set multiple keys to multiple values</para>
<para>Time complexity: O(N) where N is the number of keys to set. Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4505" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4505" bodyend="4514" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1581" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9b56e5eecfc569eb527d3bafcdddc96c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MSETNX</definition>
        <argsstring>(string key, string value)</argsstring>
        <name>MSETNX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MSETNX</para>
<para>Set multiple keys to multiple values, only if none of the keys exist</para>
<para>Time complexity: O(N) where N is the number of keys to set. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4516" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4516" bodyend="4525" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1594" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aea1a824a483718b3ba49b227b51f07d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MULTI</definition>
        <argsstring>()</argsstring>
        <name>MULTI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MULTI</para>
<para>Mark the start of a transaction block Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4527" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4527" bodyend="4531" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1605" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae323f5fb1cdf6851b0bbf5488b93348d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OBJECT</definition>
        <argsstring>(string subcommand, string arguments=&quot;&quot;)</argsstring>
        <name>OBJECT</name>
        <param>
          <type>string</type>
          <declname>subcommand</declname>
        </param>
        <param>
          <type>string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OBJECT</para>
<para>Inspect the internals of Redis objects</para>
<para>Time complexity: O(1) for all the currently implemented subcommands. Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4533" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4533" bodyend="4542" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1615" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aa69d78d2ff08d08f19e24b4dc68d4326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PERSIST</definition>
        <argsstring>(string key)</argsstring>
        <name>PERSIST</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PERSIST</para>
<para>Remove the expiration from a key</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4544" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4544" bodyend="4551" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1628" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1adde70c729765e95f861cdddb8193e3ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEXPIRE</definition>
        <argsstring>(string key, int milliseconds)</argsstring>
        <name>PEXPIRE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>milliseconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PEXPIRE</para>
<para>Set a key&apos;s time to live in milliseconds</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4553" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4553" bodyend="4563" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1640" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aa3dc68f7e42419e4a1d7a3be741e5e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PEXPIREAT</definition>
        <argsstring>(string key, string milliseconds_timestamp)</argsstring>
        <name>PEXPIREAT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>milliseconds_timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PEXPIREAT</para>
<para>Set the expiration for a key as a UNIX timestamp specified in milliseconds</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4565" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4565" bodyend="4575" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1654" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a8b3ac5d6eab8f72ee81f1924b90d22a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PFADD</definition>
        <argsstring>(string key, string element)</argsstring>
        <name>PFADD</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PFADD</para>
<para>Adds the specified elements to the specified HyperLogLog.</para>
<para>Time complexity: O(1) to add every element. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4577" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4577" bodyend="4586" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1668" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ab90bdda2db7f4dc1e959dfa64ac91996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PFCOUNT</definition>
        <argsstring>(string key)</argsstring>
        <name>PFCOUNT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PFCOUNT</para>
<para>Return the approximated cardinality of the set(s) observed by the HyperLogLog at key(s).</para>
<para>Time complexity: O(1) with a very small average constant time when called with a single key. O(N) with N being the number of keys, and much bigger constant times, when called with multiple keys. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4588" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4588" bodyend="4595" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1683" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a57b7af86b501d3fb1bb921ac824cd95e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PFMERGE</definition>
        <argsstring>(string destkey, string sourcekey)</argsstring>
        <name>PFMERGE</name>
        <param>
          <type>string</type>
          <declname>destkey</declname>
        </param>
        <param>
          <type>string</type>
          <declname>sourcekey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PFMERGE</para>
<para>Merge N different HyperLogLogs into a single one.</para>
<para>Time complexity: O(N) to merge N HyperLogLogs, but with high constant times. Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4597" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4597" bodyend="4608" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1695" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ab3a28d39fa8cbe0ed44d2c802ff2797b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PING</definition>
        <argsstring>(string message=&quot;&quot;)</argsstring>
        <name>PING</name>
        <param>
          <type>string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PING</para>
<para>Ping the server Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4610" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4610" bodyend="4617" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1708" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a598092b0e6f3cebb07d749e4615e3da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PSETEX</definition>
        <argsstring>(string key, int milliseconds, string value)</argsstring>
        <name>PSETEX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>milliseconds</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PSETEX</para>
<para>Set the value and expiration in milliseconds of a key</para>
<para>Time complexity: O(1) Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4619" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4619" bodyend="4631" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1720" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1af497f2f31bf361e09929e1e6399c4b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PUBSUB</definition>
        <argsstring>(string subcommand, string argument=&quot;&quot;)</argsstring>
        <name>PUBSUB</name>
        <param>
          <type>string</type>
          <declname>subcommand</declname>
        </param>
        <param>
          <type>string</type>
          <declname>argument</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PUBSUB</para>
<para>Inspect the state of the Pub/Sub subsystem</para>
<para>Time complexity: O(N) for the CHANNELS subcommand, where N is the number of active channels, and assuming constant time pattern matching (relatively short channels and patterns). O(N) for the NUMSUB subcommand, where N is the number of requested channels. O(1) for the NUMPAT subcommand. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4633" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4633" bodyend="4642" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1738" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aeabea7dfe9a816b3699549a0da0d2b77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PTTL</definition>
        <argsstring>(string key)</argsstring>
        <name>PTTL</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PTTL</para>
<para>Get the time to live for a key in milliseconds</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4644" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4644" bodyend="4651" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1751" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a4d1850c0780722e2aa6e2b373f1f1e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PUBLISH</definition>
        <argsstring>(string channel, string message)</argsstring>
        <name>PUBLISH</name>
        <param>
          <type>string</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PUBLISH</para>
<para>Post a message to a channel</para>
<para>Time complexity: O(N+M) where N is the number of clients subscribed to the receiving channel and M is the total number of subscribed patterns (by any client). Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4653" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4653" bodyend="4662" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1764" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac52cc49c02404817e46eb5079d95e8b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QUIT</definition>
        <argsstring>()</argsstring>
        <name>QUIT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>QUIT</para>
<para>Close the connection Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4664" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4664" bodyend="4668" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1775" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae5c145cbc18888cb1ca84f3e56d9e930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RANDOMKEY</definition>
        <argsstring>()</argsstring>
        <name>RANDOMKEY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RANDOMKEY</para>
<para>Return a random key from the keyspace</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4670" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4670" bodyend="4674" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1785" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a1cd5be519900d2093a0ade3c72c65755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int READONLY</definition>
        <argsstring>()</argsstring>
        <name>READONLY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>READONLY</para>
<para>Enables read queries for a connection to a cluster replica node</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4676" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4676" bodyend="4680" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1795" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aadfecc2fa5ec610fc4b48eb71b40c447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int READWRITE</definition>
        <argsstring>()</argsstring>
        <name>READWRITE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>READWRITE</para>
<para>Disables read queries for a connection to a cluster replica node</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4682" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4682" bodyend="4686" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1805" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aeb7b0168798b40a181627f3c73faf968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RENAME</definition>
        <argsstring>(string key, string newkey)</argsstring>
        <name>RENAME</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RENAME</para>
<para>Rename a key</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4688" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4688" bodyend="4698" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1815" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a48bc3dd0cf53183a19c95819ea66c711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RENAMENX</definition>
        <argsstring>(string key, string newkey)</argsstring>
        <name>RENAMENX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RENAMENX</para>
<para>Rename a key, only if the new key does not exist</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4700" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4700" bodyend="4710" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1829" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a88ccc5f862e19922a06b30d6044e585b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RESTORE</definition>
        <argsstring>(string key, int ttl, string serialized_value, string replace=&quot;&quot;, string absttl=&quot;&quot;, int idletime_seconds=0, int freq_frequency=0)</argsstring>
        <name>RESTORE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ttl</declname>
        </param>
        <param>
          <type>string</type>
          <declname>serialized_value</declname>
        </param>
        <param>
          <type>string</type>
          <declname>replace</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>absttl</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>idletime_seconds</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>freq_frequency</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RESTORE</para>
<para>Create a key using the provided serialized value, previously obtained using DUMP.</para>
<para>Time complexity: O(1) to create the new key and additional O(N*M) to reconstruct the serialized value, where N is the number of Redis objects composing the value and M their average size. For small string values the time complexity is thus O(1)+O(1*M) where M is small, so simply O(1). However for sorted set values the complexity is O(N*M*log(N)) because inserting values into sorted sets is O(log(N)).</para>
<para><itemizedlist>
<listitem><para>Valid values for replace: &quot;REPLACE&quot;</para>
</listitem><listitem><para>Valid values for absttl: &quot;ABSTTL&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4712" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4712" bodyend="4736" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1852" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac0ef22868eecadf2745bf78e064d6369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ROLE</definition>
        <argsstring>()</argsstring>
        <name>ROLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ROLE</para>
<para>Return the role of the instance in the context of replication Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4738" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4738" bodyend="4742" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1873" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ad8c863bcf0dbf8b63fd995ccd88fcd50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RPOP</definition>
        <argsstring>(string key)</argsstring>
        <name>RPOP</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RPOP</para>
<para>Remove and get the last element in a list</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4744" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4744" bodyend="4751" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1883" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ace59944b441332acf8f17224d6062438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RPOPLPUSH</definition>
        <argsstring>(string source, string destination)</argsstring>
        <name>RPOPLPUSH</name>
        <param>
          <type>string</type>
          <declname>source</declname>
        </param>
        <param>
          <type>string</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RPOPLPUSH</para>
<para>Remove the last element in a list, prepend it to another list and return it</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4753" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4753" bodyend="4764" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1895" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1af89de605c6eecc1614b0b0d699a88092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RPUSH</definition>
        <argsstring>(string key, string value)</argsstring>
        <name>RPUSH</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RPUSH</para>
<para>Append one or multiple values to a list</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4766" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4766" bodyend="4775" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1910" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a7550a241db2886f7e122a77a41f4739c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RPUSHX</definition>
        <argsstring>(string key, string value)</argsstring>
        <name>RPUSHX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RPUSHX</para>
<para>Append a value to a list, only if the list exists</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4777" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4777" bodyend="4786" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1923" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a83437a22bb08ae767d476c4c82952550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SADD</definition>
        <argsstring>(string key, string member)</argsstring>
        <name>SADD</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SADD</para>
<para>Add one or more members to a set</para>
<para>Time complexity: O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4788" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4788" bodyend="4797" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1937" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aec546d70ac89640356d180871f70529c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SAVE</definition>
        <argsstring>()</argsstring>
        <name>SAVE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SAVE</para>
<para>Synchronously save the dataset to disk Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4799" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4799" bodyend="4803" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1948" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1affe5b552f1dd6710fe6eeec022c71955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCARD</definition>
        <argsstring>(string key)</argsstring>
        <name>SCARD</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SCARD</para>
<para>Get the number of members in a set</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4805" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4805" bodyend="4812" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1958" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a4aa6686aa5ab6772223340818e79a99b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCRIPT_DEBUG</definition>
        <argsstring>(string mode)</argsstring>
        <name>SCRIPT_DEBUG</name>
        <param>
          <type>string</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SCRIPT_DEBUG</para>
<para>Set the debug mode for executed scripts.</para>
<para>Time complexity: O(1)</para>
<para><itemizedlist>
<listitem><para>Valid values for mode: &quot;YES&quot;, &quot;SYNC&quot;, &quot;NO&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4814" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4814" bodyend="4822" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1972" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ad3fc30a7973e8086129d10954adbd36d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCRIPT_EXISTS</definition>
        <argsstring>(string sha1)</argsstring>
        <name>SCRIPT_EXISTS</name>
        <param>
          <type>string</type>
          <declname>sha1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SCRIPT_EXISTS</para>
<para>Check existence of scripts in the script cache.</para>
<para>Time complexity: O(N) with N being the number of scripts to check (so checking a single script is an O(1) operation). Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4824" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4824" bodyend="4831" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1986" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ad4e57f1dfe9d2bb83cced893fa55c370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCRIPT_FLUSH</definition>
        <argsstring>()</argsstring>
        <name>SCRIPT_FLUSH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SCRIPT_FLUSH</para>
<para>Remove all the scripts from the script cache.</para>
<para>Time complexity: O(N) with N being the number of scripts in cache Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4833" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4833" bodyend="4837" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="1998" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ad3cddebc0a762bcafad2d53d972894c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCRIPT_KILL</definition>
        <argsstring>()</argsstring>
        <name>SCRIPT_KILL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SCRIPT_KILL</para>
<para>Kill the script currently in execution.</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4839" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4839" bodyend="4843" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2008" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a50beb1c808380ecdcf432e634bad18c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCRIPT_LOAD</definition>
        <argsstring>(string script)</argsstring>
        <name>SCRIPT_LOAD</name>
        <param>
          <type>string</type>
          <declname>script</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SCRIPT_LOAD</para>
<para>Load the specified Lua script into the script cache.</para>
<para>Time complexity: O(N) with N being the length in bytes of the script body. Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4845" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4845" bodyend="4852" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2018" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac496a7e38905f4ee6cdd697bfabca0fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SDIFF</definition>
        <argsstring>(string key)</argsstring>
        <name>SDIFF</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDIFF</para>
<para>Subtract multiple sets</para>
<para>Time complexity: O(N) where N is the total number of elements in all given sets. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4854" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4854" bodyend="4861" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2030" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a7131c1a17e57e8bce49468fba1c05320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SDIFFSTORE</definition>
        <argsstring>(string destination, string key)</argsstring>
        <name>SDIFFSTORE</name>
        <param>
          <type>string</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDIFFSTORE</para>
<para>Subtract multiple sets and store the resulting set in a key</para>
<para>Time complexity: O(N) where N is the total number of elements in all given sets. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4863" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4863" bodyend="4873" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2042" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a5d5afb65f60efc1b15654cb99253c6e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SELECT</definition>
        <argsstring>(int index)</argsstring>
        <name>SELECT</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SELECT</para>
<para>Change the selected database for the current connection Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4875" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4875" bodyend="4883" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2054" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a56c3a3d57a972a920332e426fc7134cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SET</definition>
        <argsstring>(string key, string value, string condition=&quot;&quot;)</argsstring>
        <name>SET</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <param>
          <type>string</type>
          <declname>condition</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SET</para>
<para>Set the string value of a key</para>
<para>Time complexity: O(1)</para>
<para><itemizedlist>
<listitem><para>Valid values for condition: &quot;NX&quot;, &quot;XX&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4885" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4885" bodyend="4897" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2069" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1abee9555dbc653e3c43e8238865b822f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SETBIT</definition>
        <argsstring>(string key, int offset, string value)</argsstring>
        <name>SETBIT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SETBIT</para>
<para>Sets or clears the bit at offset in the string value stored at key</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4899" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4899" bodyend="4911" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2084" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a2dfdd7385c2e96f77698a13f51b153df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SETEX</definition>
        <argsstring>(string key, int seconds, string value)</argsstring>
        <name>SETEX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SETEX</para>
<para>Set the value and expiration of a key</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4913" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4913" bodyend="4925" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2099" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1adb1f0279318f6a7e17e0ef33bf2338c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SETNX</definition>
        <argsstring>(string key, string value)</argsstring>
        <name>SETNX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SETNX</para>
<para>Set the value of a key, only if the key does not exist</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4927" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4927" bodyend="4936" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2114" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a2a1a2460c4d77dfcd78e39ec101f9962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SETRANGE</definition>
        <argsstring>(string key, int offset, string value)</argsstring>
        <name>SETRANGE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SETRANGE</para>
<para>Overwrite part of a string at key starting at the specified offset</para>
<para>Time complexity: O(1), not counting the time taken to copy the new string in place. Usually, this string is very small so the amortized complexity is O(1). Otherwise, complexity is O(M) with M being the length of the value argument. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4938" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4938" bodyend="4950" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2129" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a5d8c39bc18a9734bb9386e72a9fdabb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SHUTDOWN</definition>
        <argsstring>(string save_mode=&quot;&quot;)</argsstring>
        <name>SHUTDOWN</name>
        <param>
          <type>string</type>
          <declname>save_mode</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SHUTDOWN</para>
<para>Synchronously save the dataset to disk and then shut down the server</para>
<para><itemizedlist>
<listitem><para>Valid values for save_mode: &quot;NOSAVE&quot;, &quot;SAVE&quot; Annotated return value: simple-string </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4952" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4952" bodyend="4960" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2144" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac4115b667d61362a45f5c676bc928405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SINTER</definition>
        <argsstring>(string key)</argsstring>
        <name>SINTER</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SINTER</para>
<para>Intersect multiple sets</para>
<para>Time complexity: O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4962" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4962" bodyend="4969" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2158" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a094b45713d22b8d68b46cd6d41b0cf54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SINTERSTORE</definition>
        <argsstring>(string destination, string key)</argsstring>
        <name>SINTERSTORE</name>
        <param>
          <type>string</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SINTERSTORE</para>
<para>Intersect multiple sets and store the resulting set in a key</para>
<para>Time complexity: O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4971" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4971" bodyend="4981" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2171" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a1d4664d3ea2e8f8bec2f95044fea1259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SISMEMBER</definition>
        <argsstring>(string key, string member)</argsstring>
        <name>SISMEMBER</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SISMEMBER</para>
<para>Determine if a given value is a member of a set</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4983" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4983" bodyend="4992" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2185" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a854d0dd12fb6a645a0243846e8a3d03d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SLAVEOF</definition>
        <argsstring>(string host, string port)</argsstring>
        <name>SLAVEOF</name>
        <param>
          <type>string</type>
          <declname>host</declname>
        </param>
        <param>
          <type>string</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SLAVEOF</para>
<para>Make the server a replica of another instance, or promote it as master. Deprecated starting with Redis 5. Use REPLICAOF instead. Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="4994" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="4994" bodyend="5003" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2196" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aa1010aae13313986e467fd73fd7752e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int REPLICAOF</definition>
        <argsstring>(string host, string port)</argsstring>
        <name>REPLICAOF</name>
        <param>
          <type>string</type>
          <declname>host</declname>
        </param>
        <param>
          <type>string</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>REPLICAOF</para>
<para>Make the server a replica of another instance, or promote it as master. Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5005" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5005" bodyend="5014" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2207" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae05b8bc47bbf98f853c71a3d1865d724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SLOWLOG</definition>
        <argsstring>(string subcommand, string argument=&quot;&quot;)</argsstring>
        <name>SLOWLOG</name>
        <param>
          <type>string</type>
          <declname>subcommand</declname>
        </param>
        <param>
          <type>string</type>
          <declname>argument</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SLOWLOG</para>
<para>Manages the Redis slow queries log Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5016" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5016" bodyend="5025" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2218" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aef07439e2c17f2d52ecc30fb3f78ef8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SMEMBERS</definition>
        <argsstring>(string key)</argsstring>
        <name>SMEMBERS</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SMEMBERS</para>
<para>Get all the members in a set</para>
<para>Time complexity: O(N) where N is the set cardinality. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5027" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5027" bodyend="5034" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2231" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1af115823d095e003d6c42e931106698f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SMOVE</definition>
        <argsstring>(string source, string destination, string member)</argsstring>
        <name>SMOVE</name>
        <param>
          <type>string</type>
          <declname>source</declname>
        </param>
        <param>
          <type>string</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SMOVE</para>
<para>Move a member from one set to another</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5036" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5036" bodyend="5049" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2243" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a06da5fff5f62edbfc0c27da983a68275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SORT</definition>
        <argsstring>(string key, string by_pattern=&quot;&quot;, int limit_offset=0, int limit_count=0, string get_pattern=&quot;&quot;, string order=&quot;&quot;, string sorting=&quot;&quot;, string store_destination=&quot;&quot;)</argsstring>
        <name>SORT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>by_pattern</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>limit_offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>limit_count</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>get_pattern</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>order</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>sorting</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>store_destination</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SORT</para>
<para>Sort the elements in a list, set or sorted set</para>
<para>Time complexity: O(N+M*log(M)) where N is the number of elements in the list or set to sort, and M the number of returned elements. When the elements are not sorted, complexity is currently O(N) as there is a copy step that will be avoided in next releases.</para>
<para><itemizedlist>
<listitem><para>Valid values for order: &quot;ASC&quot;, &quot;DESC&quot;</para>
</listitem><listitem><para>Valid values for sorting: &quot;ALPHA&quot; Annotated return value: array </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5051" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5051" bodyend="5078" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2266" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a292fab9611f9aba62b64a5a6eda71092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SPOP</definition>
        <argsstring>(string key, int count=0)</argsstring>
        <name>SPOP</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SPOP</para>
<para>Remove and return one or multiple random members from a set</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5080" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5080" bodyend="5090" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2291" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a53c88f8de0e1221fff79597d0010895a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SRANDMEMBER</definition>
        <argsstring>(string key, int count=0)</argsstring>
        <name>SRANDMEMBER</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SRANDMEMBER</para>
<para>Get one or multiple random members from a set</para>
<para>Time complexity: Without the count argument O(1), otherwise O(N) where N is the absolute value of the passed count. Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5092" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5092" bodyend="5102" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2306" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae62e17295bf33a00dd67a98888782112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SREM</definition>
        <argsstring>(string key, string member)</argsstring>
        <name>SREM</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SREM</para>
<para>Remove one or more members from a set</para>
<para>Time complexity: O(N) where N is the number of members to be removed. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5104" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5104" bodyend="5113" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2320" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a2597f493ac8afcb6271089c923396da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int STRLEN</definition>
        <argsstring>(string key)</argsstring>
        <name>STRLEN</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STRLEN</para>
<para>Get the length of the value stored in a key</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5115" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5115" bodyend="5122" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2333" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a8928fd494bbedd0e70b01b15304eb512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SUNION</definition>
        <argsstring>(string key)</argsstring>
        <name>SUNION</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SUNION</para>
<para>Add multiple sets</para>
<para>Time complexity: O(N) where N is the total number of elements in all given sets. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5124" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5124" bodyend="5131" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2345" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a1d162b7dd324dca3c21d57371101abae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SUNIONSTORE</definition>
        <argsstring>(string destination, string key)</argsstring>
        <name>SUNIONSTORE</name>
        <param>
          <type>string</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SUNIONSTORE</para>
<para>Add multiple sets and store the resulting set in a key</para>
<para>Time complexity: O(N) where N is the total number of elements in all given sets. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5133" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5133" bodyend="5143" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2357" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1af450c0c8bdbfdd4b3b1e75b1d1240eb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SWAPDB</definition>
        <argsstring>(int index, int index_1)</argsstring>
        <name>SWAPDB</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index_1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SWAPDB</para>
<para>Swaps two Redis databases Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5145" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5145" bodyend="5156" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2369" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a6eb8c85f7c9c96f3d5bb569f88bd06d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SYNC</definition>
        <argsstring>()</argsstring>
        <name>SYNC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SYNC</para>
<para>Internal command used for replication Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5158" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5158" bodyend="5162" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2382" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a527b2b730b9fb9ff537261dfdd95af92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TIME</definition>
        <argsstring>()</argsstring>
        <name>TIME</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TIME</para>
<para>Return the current server time</para>
<para>Time complexity: O(1) Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5164" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5164" bodyend="5168" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2392" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a6863ff7c9ba028686444c6f3f5b79f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TOUCH</definition>
        <argsstring>(string key)</argsstring>
        <name>TOUCH</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TOUCH</para>
<para>Alters the last access time of a key(s). Returns the number of existing keys specified.</para>
<para>Time complexity: O(N) where N is the number of keys that will be touched. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5170" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5170" bodyend="5177" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2402" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a7e4664d5b97760617200a034af09abf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TTL</definition>
        <argsstring>(string key)</argsstring>
        <name>TTL</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TTL</para>
<para>Get the time to live for a key</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5179" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5179" bodyend="5186" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2414" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a827ac8f84fb14407b08d867e576693a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TYPE</definition>
        <argsstring>(string key)</argsstring>
        <name>TYPE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TYPE</para>
<para>Determine the type stored at key</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5188" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5188" bodyend="5195" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2426" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aa1fa7cbf23cda9c2431f3c44a2eb3175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UNLINK</definition>
        <argsstring>(string key)</argsstring>
        <name>UNLINK</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>UNLINK</para>
<para>Delete a key asynchronously in another thread. Otherwise it is just as DEL, but non blocking.</para>
<para>Time complexity: O(1) for each key removed regardless of its size. Then the command does O(N) work in a different thread in order to reclaim memory, where N is the number of allocations the deleted objects where composed of. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5197" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5197" bodyend="5204" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2440" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a3a728ec56f956f7c8dc04740fb06ea53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UNWATCH</definition>
        <argsstring>()</argsstring>
        <name>UNWATCH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>UNWATCH</para>
<para>Forget about all watched keys</para>
<para>Time complexity: O(1) Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5206" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5206" bodyend="5210" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2452" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a3d2504c4499e2661f9fef80f41df198e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WAIT</definition>
        <argsstring>(int numreplicas, int timeout)</argsstring>
        <name>WAIT</name>
        <param>
          <type>int</type>
          <declname>numreplicas</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>WAIT</para>
<para>Wait for the synchronous replication of all the write commands sent in the context of the current connection</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5212" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5212" bodyend="5223" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2462" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a814bb7f9a1d72b334cf6c1efb19c8f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WATCH</definition>
        <argsstring>(string key)</argsstring>
        <name>WATCH</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>WATCH</para>
<para>Watch the given keys to determine execution of the MULTI/EXEC block</para>
<para>Time complexity: O(1) for every key. Annotated return value: simple-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5225" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5225" bodyend="5232" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2477" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9ea41b8fe122b23a88edf61df6a8e284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZADD</definition>
        <argsstring>(string key, string condition=&quot;&quot;, string change=&quot;&quot;, string increment=&quot;&quot;, float score=0.0, string member=&quot;&quot;)</argsstring>
        <name>ZADD</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>condition</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>change</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>increment</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>float</type>
          <declname>score</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZADD</para>
<para>Add one or more members to a sorted set, or update its score if it already exists</para>
<para>Time complexity: O(log(N)) for each item added, where N is the number of elements in the sorted set.</para>
<para><itemizedlist>
<listitem><para>Valid values for condition: &quot;NX&quot;, &quot;XX&quot;</para>
</listitem><listitem><para>Valid values for change: &quot;CH&quot;</para>
</listitem><listitem><para>Valid values for increment: &quot;INCR&quot; Annotated return value: integer </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5234" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5234" bodyend="5255" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2496" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1af12666ce4befe1fa83fc09de1e84f1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZCARD</definition>
        <argsstring>(string key)</argsstring>
        <name>ZCARD</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZCARD</para>
<para>Get the number of members in a sorted set</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5257" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5257" bodyend="5264" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2517" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aba7275366386eea5d106fdaeb53fffc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZCOUNT</definition>
        <argsstring>(string key, float min, float max)</argsstring>
        <name>ZCOUNT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZCOUNT</para>
<para>Count the members in a sorted set with scores within the given values</para>
<para>Time complexity: O(log(N)) with N being the number of elements in the sorted set. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5266" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5266" bodyend="5279" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2529" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a52a022c06f0b4fad43e92e43a88638f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZINCRBY</definition>
        <argsstring>(string key, int increment, string member)</argsstring>
        <name>ZINCRBY</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>increment</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZINCRBY</para>
<para>Increment the score of a member in a sorted set</para>
<para>Time complexity: O(log(N)) where N is the number of elements in the sorted set. Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5281" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5281" bodyend="5293" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2545" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a095de03bdae6ab47dc5c839884888bef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZINTERSTORE</definition>
        <argsstring>(string destination, int numkeys, string key, int weights_weight=0, string aggregate_aggregate=&quot;&quot;)</argsstring>
        <name>ZINTERSTORE</name>
        <param>
          <type>string</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numkeys</declname>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>weights_weight</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>aggregate_aggregate</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZINTERSTORE</para>
<para>Intersect multiple sorted sets and store the resulting sorted set in a new key</para>
<para>Time complexity: O(N*K)+O(M*log(M)) worst case with N being the smallest input sorted set, K being the number of input sorted sets and M being the number of elements in the resulting sorted set.</para>
<para><itemizedlist>
<listitem><para>Valid values for aggregate_aggregate: &quot;SUM&quot;, &quot;MIN&quot;, &quot;MAX&quot; Annotated return value: integer </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5295" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5295" bodyend="5314" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2564" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1afb22eed5de78e64a6dbd4b6cf983ab35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZLEXCOUNT</definition>
        <argsstring>(string key, string min, string max)</argsstring>
        <name>ZLEXCOUNT</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>min</declname>
        </param>
        <param>
          <type>string</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZLEXCOUNT</para>
<para>Count the number of members in a sorted set between a given lexicographical range</para>
<para>Time complexity: O(log(N)) with N being the number of elements in the sorted set. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5316" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5316" bodyend="5327" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2584" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a8ea8548fbfe0f2f327ec9f224f1b1520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZPOPMAX</definition>
        <argsstring>(string key, int count=0)</argsstring>
        <name>ZPOPMAX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZPOPMAX</para>
<para>Remove and return members with the highest scores in a sorted set</para>
<para>Time complexity: O(log(N)*M) with N being the number of elements in the sorted set, and M being the number of elements popped. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5329" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5329" bodyend="5339" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2599" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a5e7099a25885fc3bb806dc18a1c1753f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZPOPMIN</definition>
        <argsstring>(string key, int count=0)</argsstring>
        <name>ZPOPMIN</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZPOPMIN</para>
<para>Remove and return members with the lowest scores in a sorted set</para>
<para>Time complexity: O(log(N)*M) with N being the number of elements in the sorted set, and M being the number of elements popped. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5341" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5341" bodyend="5351" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2614" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a089769506113c2d9d469abb37175ec06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZRANGE</definition>
        <argsstring>(string key, int start, int stop, string withscores=&quot;&quot;)</argsstring>
        <name>ZRANGE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>string</type>
          <declname>withscores</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZRANGE</para>
<para>Return a range of members in a sorted set, by index</para>
<para>Time complexity: O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements returned.</para>
<para><itemizedlist>
<listitem><para>Valid values for withscores: &quot;WITHSCORES&quot; Annotated return value: array </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5353" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5353" bodyend="5369" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2631" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ace13dc547d9c27caf4103b11ef14b409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZRANGEBYLEX</definition>
        <argsstring>(string key, string min, string max, int limit_offset=0, int limit_count=0)</argsstring>
        <name>ZRANGEBYLEX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>min</declname>
        </param>
        <param>
          <type>string</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int</type>
          <declname>limit_offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>limit_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZRANGEBYLEX</para>
<para>Return a range of members in a sorted set, by lexicographical range</para>
<para>Time complexity: O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)). Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5371" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5371" bodyend="5388" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2651" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a86c0f363441a14bb567ba12e059d17ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZREVRANGEBYLEX</definition>
        <argsstring>(string key, string max, string min, int limit_offset=0, int limit_count=0)</argsstring>
        <name>ZREVRANGEBYLEX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>max</declname>
        </param>
        <param>
          <type>string</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>limit_offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>limit_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZREVRANGEBYLEX</para>
<para>Return a range of members in a sorted set, by lexicographical range, ordered from higher to lower strings.</para>
<para>Time complexity: O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)). Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5390" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5390" bodyend="5407" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2671" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a8b70e3762b848421946ef1584ac6b1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZRANGEBYSCORE</definition>
        <argsstring>(string key, float min, float max, string withscores=&quot;&quot;, int limit_offset=0, int limit_count=0)</argsstring>
        <name>ZRANGEBYSCORE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <param>
          <type>string</type>
          <declname>withscores</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>limit_offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>limit_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZRANGEBYSCORE</para>
<para>Return a range of members in a sorted set, by score</para>
<para>Time complexity: O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)).</para>
<para><itemizedlist>
<listitem><para>Valid values for withscores: &quot;WITHSCORES&quot; Annotated return value: array </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5409" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5409" bodyend="5431" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2693" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1af628aa6c7cd81d264a9e22be1ab2d0c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZRANK</definition>
        <argsstring>(string key, string member)</argsstring>
        <name>ZRANK</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZRANK</para>
<para>Determine the index of a member in a sorted set</para>
<para>Time complexity: O(log(N)) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5433" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5433" bodyend="5442" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2715" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a626ce15798c10cf57daa349c5b7837b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZREM</definition>
        <argsstring>(string key, string member)</argsstring>
        <name>ZREM</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZREM</para>
<para>Remove one or more members from a sorted set</para>
<para>Time complexity: O(M*log(N)) with N being the number of elements in the sorted set and M the number of elements to be removed. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5444" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5444" bodyend="5453" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2729" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ab741fa254bef3c225249dc94a150a767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZREMRANGEBYLEX</definition>
        <argsstring>(string key, string min, string max)</argsstring>
        <name>ZREMRANGEBYLEX</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>min</declname>
        </param>
        <param>
          <type>string</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZREMRANGEBYLEX</para>
<para>Remove all members in a sorted set between the given lexicographical range</para>
<para>Time complexity: O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements removed by the operation. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5455" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5455" bodyend="5466" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2743" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac66fde29ca680bb632874dbb8a4f81de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZREMRANGEBYRANK</definition>
        <argsstring>(string key, int start, int stop)</argsstring>
        <name>ZREMRANGEBYRANK</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZREMRANGEBYRANK</para>
<para>Remove all members in a sorted set within the given indexes</para>
<para>Time complexity: O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements removed by the operation. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5468" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5468" bodyend="5481" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2758" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a560df938c0e65c160d5e54f22bbdedd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZREMRANGEBYSCORE</definition>
        <argsstring>(string key, float min, float max)</argsstring>
        <name>ZREMRANGEBYSCORE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZREMRANGEBYSCORE</para>
<para>Remove all members in a sorted set within the given scores</para>
<para>Time complexity: O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements removed by the operation. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5483" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5483" bodyend="5496" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2775" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ac9b9af45039b49536337dd61fe99b854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZREVRANGE</definition>
        <argsstring>(string key, int start, int stop, string withscores=&quot;&quot;)</argsstring>
        <name>ZREVRANGE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>string</type>
          <declname>withscores</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZREVRANGE</para>
<para>Return a range of members in a sorted set, by index, with scores ordered from high to low</para>
<para>Time complexity: O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements returned.</para>
<para><itemizedlist>
<listitem><para>Valid values for withscores: &quot;WITHSCORES&quot; Annotated return value: array </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5498" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5498" bodyend="5514" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2794" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ae306f78bd94be6b92e358adbb227acc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZREVRANGEBYSCORE</definition>
        <argsstring>(string key, float max, float min, string withscores=&quot;&quot;, int limit_offset=0, int limit_count=0)</argsstring>
        <name>ZREVRANGEBYSCORE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>string</type>
          <declname>withscores</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>limit_offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>limit_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZREVRANGEBYSCORE</para>
<para>Return a range of members in a sorted set, by score, with scores ordered from high to low</para>
<para>Time complexity: O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)).</para>
<para><itemizedlist>
<listitem><para>Valid values for withscores: &quot;WITHSCORES&quot; Annotated return value: array </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5516" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5516" bodyend="5538" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2816" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a27848afdc3b53b9259821787863ed964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZREVRANK</definition>
        <argsstring>(string key, string member)</argsstring>
        <name>ZREVRANK</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZREVRANK</para>
<para>Determine the index of a member in a sorted set, with scores ordered from high to low</para>
<para>Time complexity: O(log(N)) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5540" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5540" bodyend="5549" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2838" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ab6ea030822f8580660f6a2fbd0cd55a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZSCORE</definition>
        <argsstring>(string key, string member)</argsstring>
        <name>ZSCORE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZSCORE</para>
<para>Get the score associated with the given member in a sorted set</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5551" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5551" bodyend="5560" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2851" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a55ad4e3489e2ea38fe3e75063aebeb3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZUNIONSTORE</definition>
        <argsstring>(string destination, int numkeys, string key, int weights_weight=0, string aggregate_aggregate=&quot;&quot;)</argsstring>
        <name>ZUNIONSTORE</name>
        <param>
          <type>string</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numkeys</declname>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>weights_weight</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>aggregate_aggregate</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZUNIONSTORE</para>
<para>Add multiple sorted sets and store the resulting sorted set in a new key</para>
<para>Time complexity: O(N)+O(M log(M)) with N being the sum of the sizes of the input sorted sets, and M being the number of elements in the resulting sorted set.</para>
<para><itemizedlist>
<listitem><para>Valid values for aggregate_aggregate: &quot;SUM&quot;, &quot;MIN&quot;, &quot;MAX&quot; Annotated return value: integer </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5562" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5562" bodyend="5581" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2867" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ab94105ac205a71b2a783a2988467d810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCAN</definition>
        <argsstring>(int cursor, string match_pattern=&quot;&quot;, int count_count=0, string type_type=&quot;&quot;)</argsstring>
        <name>SCAN</name>
        <param>
          <type>int</type>
          <declname>cursor</declname>
        </param>
        <param>
          <type>string</type>
          <declname>match_pattern</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>count_count</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>type_type</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SCAN</para>
<para>Incrementally iterate the keys space</para>
<para>Time complexity: O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection. Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5583" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5583" bodyend="5599" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2889" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1adf532e5e37cbde194b492b06d856f3d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SSCAN</definition>
        <argsstring>(string key, int cursor, string match_pattern=&quot;&quot;, int count_count=0)</argsstring>
        <name>SSCAN</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cursor</declname>
        </param>
        <param>
          <type>string</type>
          <declname>match_pattern</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>count_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SSCAN</para>
<para>Incrementally iterate Set elements</para>
<para>Time complexity: O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection.. Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5601" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5601" bodyend="5617" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2909" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a15c40ca88434e8b341c23377a90ad6b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HSCAN</definition>
        <argsstring>(string key, int cursor, string match_pattern=&quot;&quot;, int count_count=0)</argsstring>
        <name>HSCAN</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cursor</declname>
        </param>
        <param>
          <type>string</type>
          <declname>match_pattern</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>count_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HSCAN</para>
<para>Incrementally iterate hash fields and associated values</para>
<para>Time complexity: O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection.. Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5619" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5619" bodyend="5635" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2929" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a9bb9950bcae0fe831be1850e9cc8ce0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ZSCAN</definition>
        <argsstring>(string key, int cursor, string match_pattern=&quot;&quot;, int count_count=0)</argsstring>
        <name>ZSCAN</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cursor</declname>
        </param>
        <param>
          <type>string</type>
          <declname>match_pattern</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>count_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ZSCAN</para>
<para>Incrementally iterate sorted sets elements and associated scores</para>
<para>Time complexity: O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection.. Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5637" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5637" bodyend="5653" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2949" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ad122c1f6a05fdeb82f0b0cd751b40f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XINFO</definition>
        <argsstring>(string consumers_key=&quot;&quot;, string consumers_groupname=&quot;&quot;, string groups_key=&quot;&quot;, string stream_key=&quot;&quot;, string help=&quot;&quot;)</argsstring>
        <name>XINFO</name>
        <param>
          <type>string</type>
          <declname>consumers_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>consumers_groupname</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>groups_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>stream_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>help</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XINFO</para>
<para>Get information on streams and consumer groups</para>
<para>Time complexity: O(N) with N being the number of returned items for the subcommands CONSUMERS and GROUPS. The STREAM subcommand is O(log N) with N being the number of items in the stream.</para>
<para><itemizedlist>
<listitem><para>Valid values for help: &quot;HELP&quot; Annotated return value: </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5655" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5655" bodyend="5674" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2971" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a4febd86266d8b2be7e73f660334ac808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XADD</definition>
        <argsstring>(string key, string ID, string field, string str)</argsstring>
        <name>XADD</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>ID</declname>
        </param>
        <param>
          <type>string</type>
          <declname>field</declname>
        </param>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XADD</para>
<para>Appends a new entry to a stream</para>
<para>Time complexity: O(1) Annotated return value: bulk-string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5676" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5676" bodyend="5690" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="2991" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a2a23f06f0704d32ab56978fc1f299b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XTRIM</definition>
        <argsstring>(string key, string strategy, string approx=&quot;&quot;, int count=0)</argsstring>
        <name>XTRIM</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>strategy</declname>
        </param>
        <param>
          <type>string</type>
          <declname>approx</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XTRIM</para>
<para>Trims the stream to (approximately if &apos;~&apos; is passed) a certain size</para>
<para>Time complexity: O(N), with N being the number of evicted entries. Constant times are very small however, since entries are organized in macro nodes containing multiple entries that can be released with a single deallocation.</para>
<para><itemizedlist>
<listitem><para>Valid values for strategy: &quot;MAXLEN&quot;</para>
</listitem><listitem><para>Valid values for approx: &quot;~&quot; Annotated return value: integer </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5692" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5692" bodyend="5708" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3013" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a3ab71a95d791b27a0583c33bcb72fe1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XDEL</definition>
        <argsstring>(string key, string ID)</argsstring>
        <name>XDEL</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>ID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XDEL</para>
<para>Removes the specified entries from the stream. Returns the number of items actually deleted, that may be different from the number of IDs passed in case certain IDs do not exist.</para>
<para>Time complexity: O(1) for each single item to delete in the stream, regardless of the stream size. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5710" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5710" bodyend="5719" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3032" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a762c4a57e3775a75ceaa2d5940da336b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XRANGE</definition>
        <argsstring>(string key, string start, string end, int count_count=0)</argsstring>
        <name>XRANGE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>start</declname>
        </param>
        <param>
          <type>string</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XRANGE</para>
<para>Return a range of elements in a stream, with IDs matching the specified IDs interval</para>
<para>Time complexity: O(N) with N being the number of elements being returned. If N is constant (e.g. always asking for the first 10 elements with COUNT), you can consider it O(1). Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5721" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5721" bodyend="5735" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3047" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a847442611eb418d678afd2695985614d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XREVRANGE</definition>
        <argsstring>(string key, string end, string start, int count_count=0)</argsstring>
        <name>XREVRANGE</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>end</declname>
        </param>
        <param>
          <type>string</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XREVRANGE</para>
<para>Return a range of elements in a stream, with IDs matching the specified IDs interval, in reverse order (from greater to smaller IDs) compared to XRANGE</para>
<para>Time complexity: O(N) with N being the number of elements returned. If N is constant (e.g. always asking for the first 10 elements with COUNT), you can consider it O(1). Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5737" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5737" bodyend="5751" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3065" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a45ba42e3353f637c0d5a6408a61de807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XLEN</definition>
        <argsstring>(string key)</argsstring>
        <name>XLEN</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XLEN</para>
<para>Return the number of entires in a stream</para>
<para>Time complexity: O(1) Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5753" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5753" bodyend="5760" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3081" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a940992c62e3c3f882372cf18a6c1c2ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XREAD</definition>
        <argsstring>(int count_count=0, int block_milliseconds=0, string streams=&quot;&quot;, string key=&quot;&quot;, string ID=&quot;&quot;)</argsstring>
        <name>XREAD</name>
        <param>
          <type>int</type>
          <declname>count_count</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>block_milliseconds</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>streams</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>ID</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XREAD</para>
<para>Return never seen elements in multiple streams, with IDs greater than the ones reported by the caller for each stream. Can block.</para>
<para>Time complexity: For each stream mentioned: O(N) with N being the number of elements being returned, it menas that XREAD-ing with a fixed COUNT is O(1). Note that when the BLOCK option is used, XADD will pay O(M) time in order to serve the M clients blocked on the stream getting new data.</para>
<para><itemizedlist>
<listitem><para>Valid values for streams: &quot;STREAMS&quot; Annotated return value: array </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5762" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5762" bodyend="5780" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3098" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1ad5446d69dfb0e68d048d38dff29c9e4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XGROUP</definition>
        <argsstring>(string create_key=&quot;&quot;, string create_groupname=&quot;&quot;, string create_id_or__=&quot;&quot;, string setid_key=&quot;&quot;, string setid_groupname=&quot;&quot;, string setid_id_or__=&quot;&quot;, string destroy_key=&quot;&quot;, string destroy_groupname=&quot;&quot;, string delconsumer_key=&quot;&quot;, string delconsumer_groupname=&quot;&quot;, string delconsumer_consumername=&quot;&quot;)</argsstring>
        <name>XGROUP</name>
        <param>
          <type>string</type>
          <declname>create_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>create_groupname</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>create_id_or__</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>setid_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>setid_groupname</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>setid_id_or__</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>destroy_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>destroy_groupname</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>delconsumer_key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>delconsumer_groupname</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>delconsumer_consumername</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XGROUP</para>
<para>Create, destroy, and manage consumer groups.</para>
<para>Time complexity: O(1) for all the subcommands, with the exception of the DESTROY subcommand which takes an additional O(M) time in order to delete the M entries inside the consumer group pending entries list (PEL). Annotated return value: </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5782" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5782" bodyend="5813" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3119" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a60065aeba843d532447032c139de09c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XREADGROUP</definition>
        <argsstring>(string group_group, string group_consumer, int count_count=0, int block_milliseconds=0, string noack=&quot;&quot;, string streams=&quot;&quot;, string key=&quot;&quot;, string ID=&quot;&quot;)</argsstring>
        <name>XREADGROUP</name>
        <param>
          <type>string</type>
          <declname>group_group</declname>
        </param>
        <param>
          <type>string</type>
          <declname>group_consumer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count_count</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>block_milliseconds</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>noack</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>streams</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>key</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>ID</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XREADGROUP</para>
<para>Return new entries from a stream using a consumer group, or access the history of the pending entries for a given consumer. Can block.</para>
<para>Time complexity: For each stream mentioned: O(M) with M being the number of elements returned. If M is constant (e.g. always asking for the first 10 elements with COUNT), you can consider it O(1). On the other side when XREADGROUP blocks, XADD will pay the O(N) time in order to serve the N clients blocked on the stream getting new data.</para>
<para><itemizedlist>
<listitem><para>Valid values for noack: &quot;NOACK&quot;</para>
</listitem><listitem><para>Valid values for streams: &quot;STREAMS&quot; Annotated return value: </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5815" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5815" bodyend="5840" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3153" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aa9c7cd64d33be569665a5ae2f572ca3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XACK</definition>
        <argsstring>(string key, string group, string ID)</argsstring>
        <name>XACK</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>group</declname>
        </param>
        <param>
          <type>string</type>
          <declname>ID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XACK</para>
<para>Marks a pending message as correctly processed, effectively removing it from the pending entries list of the consumer group. Return value of the command is the number of messages successfully acknowledged, that is, the IDs we were actually able to resolve in the PEL.</para>
<para>Time complexity: O(1) for each message ID processed. Annotated return value: integer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5842" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5842" bodyend="5853" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3176" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1a1a338ff0373d858aafa3ef2e44fc9457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XCLAIM</definition>
        <argsstring>(string key, string group, string consumer, string min_idle_time, string ID, int idle_ms=0, int time_ms_unix_time=0, int retrycount_count=0)</argsstring>
        <name>XCLAIM</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>group</declname>
        </param>
        <param>
          <type>string</type>
          <declname>consumer</declname>
        </param>
        <param>
          <type>string</type>
          <declname>min_idle_time</declname>
        </param>
        <param>
          <type>string</type>
          <declname>ID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idle_ms</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>time_ms_unix_time</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>retrycount_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XCLAIM</para>
<para>Changes (or acquires) ownership of a message in a consumer group, as if the message was delivered to the specified consumer.</para>
<para>Time complexity: O(log N) with N being the number of messages in the PEL of the consumer group. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5855" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5855" bodyend="5879" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3191" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="nwnx__redis__short_8nss_1aeb0553ad0386b8d4563c66177784bb4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int XPENDING</definition>
        <argsstring>(string key, string group, string start=&quot;&quot;, string end=&quot;&quot;, int count=0, string consumer=&quot;&quot;)</argsstring>
        <name>XPENDING</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>string</type>
          <declname>group</declname>
        </param>
        <param>
          <type>string</type>
          <declname>start</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>end</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>string</type>
          <declname>consumer</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPENDING</para>
<para>Return information and entries from a stream consumer group pending entries list, that are messages fetched but never acknowledged.</para>
<para>Time complexity: O(N) with N being the number of elements returned, so asking for a small fixed number of entries per call is O(1). When the command returns just the summary it runs in O(1) time assuming the list of consumers is small, otherwise there is additional O(N) time needed to iterate every consumer. Annotated return value: array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss" line="5881" column="5" bodyfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" bodystart="5881" bodyend="5899" declfile="Plugins/Redis/NWScript/nwnx_redis_short.nss" declline="3216" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;nwnx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nwnx_redis_lib&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Skipping<sp/>sub-command:<sp/>BITFIELD/{&quot;command&quot;=&gt;&quot;OVERFLOW&quot;,<sp/>&quot;type&quot;=&gt;&quot;enum&quot;,<sp/>&quot;enum&quot;=&gt;[&quot;WRAP&quot;,<sp/>&quot;SAT&quot;,<sp/>&quot;FAIL&quot;],<sp/>&quot;optional&quot;=&gt;true}<sp/>-<sp/>not<sp/>supported<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Skipping<sp/>sub-command:<sp/>CLIENT_KILL/{&quot;command&quot;=&gt;&quot;TYPE&quot;,<sp/>&quot;type&quot;=&gt;&quot;enum&quot;,<sp/>&quot;enum&quot;=&gt;[&quot;normal&quot;,<sp/>&quot;master&quot;,<sp/>&quot;slave&quot;,<sp/>&quot;pubsub&quot;],<sp/>&quot;optional&quot;=&gt;true}<sp/>-<sp/>not<sp/>supported<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Skipping<sp/>sub-command:<sp/>CLIENT_LIST/{&quot;command&quot;=&gt;&quot;TYPE&quot;,<sp/>&quot;type&quot;=&gt;&quot;enum&quot;,<sp/>&quot;enum&quot;=&gt;[&quot;normal&quot;,<sp/>&quot;master&quot;,<sp/>&quot;replica&quot;,<sp/>&quot;pubsub&quot;],<sp/>&quot;optional&quot;=&gt;true}<sp/>-<sp/>not<sp/>supported<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Skipping<sp/>sub-command:<sp/>SET/{&quot;command&quot;=&gt;&quot;expiration&quot;,<sp/>&quot;type&quot;=&gt;&quot;enum&quot;,<sp/>&quot;enum&quot;=&gt;[&quot;EX<sp/>seconds&quot;,<sp/>&quot;PX<sp/>milliseconds&quot;],<sp/>&quot;optional&quot;=&gt;true}<sp/>-<sp/>not<sp/>supported<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Skipping<sp/>XCLAIM,<sp/>cannot<sp/>parse<sp/>argument:<sp/>{&quot;name&quot;=&gt;&quot;force&quot;,<sp/>&quot;enum&quot;=&gt;[&quot;FORCE&quot;],<sp/>&quot;optional&quot;=&gt;true}<sp/>-<sp/>not<sp/>supported<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Skipping<sp/>XCLAIM,<sp/>cannot<sp/>parse<sp/>argument:<sp/>{&quot;name&quot;=&gt;&quot;justid&quot;,<sp/>&quot;enum&quot;=&gt;[&quot;JUSTID&quot;],<sp/>&quot;optional&quot;=&gt;true}<sp/>-<sp/>not<sp/>supported<sp/>yet.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>APPEND(</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="25"><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AUTH(</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>password</highlight></codeline>
<codeline lineno="35"><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BGREWRITEAOF();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BGSAVE();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BITCOUNT(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="67"><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BITFIELD(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>get_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>set_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_value<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>incrby_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incrby_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incrby_increment<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="95"><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BITOP(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>operation,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destkey,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="110"><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BITPOS(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="128"><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BLPOP(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="142"><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BRPOP(</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="156"><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BRPOPLPUSH(</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>source,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="173"><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BZPOPMIN(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="187"><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BZPOPMAX(</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="201"><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_ID();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_KILL(</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ip_port<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id_client_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>addr_ip_port<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>skipme_yes_no<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_LIST();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_GETNAME();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_PAUSE(</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="260"><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_REPLY(</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>reply_mode</highlight></codeline>
<codeline lineno="275"><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_SETNAME(</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>connection_name</highlight></codeline>
<codeline lineno="287"><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_UNBLOCK(</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>client_id,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unblock_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_ADDSLOTS(</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot</highlight></codeline>
<codeline lineno="316"><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_COUNT_FAILURE_REPORTS(</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id</highlight></codeline>
<codeline lineno="328"><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_COUNTKEYSINSLOT(</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot</highlight></codeline>
<codeline lineno="341"><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_DELSLOTS(</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot</highlight></codeline>
<codeline lineno="354"><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_FAILOVER(</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>options<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_FORGET(</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id</highlight></codeline>
<codeline lineno="381"><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_GETKEYSINSLOT(</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count</highlight></codeline>
<codeline lineno="396"><highlight class="normal">);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_INFO();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_KEYSLOT(</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="418"><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_MEET(</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ip,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port</highlight></codeline>
<codeline lineno="432"><highlight class="normal">);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_NODES();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_REPLICATE(</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id</highlight></codeline>
<codeline lineno="454"><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_RESET(</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>reset_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_SAVECONFIG();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_SET_CONFIG_EPOCH(</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>config_epoch</highlight></codeline>
<codeline lineno="493"><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_SETSLOT(</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>subcommand,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_SLAVES(</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id</highlight></codeline>
<codeline lineno="523"><highlight class="normal">);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_REPLICAS(</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id</highlight></codeline>
<codeline lineno="535"><highlight class="normal">);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_SLOTS();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COMMAND();</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COMMAND_COUNT();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COMMAND_GETKEYS();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COMMAND_INFO(</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>command_name</highlight></codeline>
<codeline lineno="587"><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONFIG_GET(</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>parameter</highlight></codeline>
<codeline lineno="597"><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONFIG_REWRITE();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONFIG_SET(</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>parameter,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="616"><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONFIG_RESETSTAT();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DBSIZE();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEBUG_OBJECT(</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="644"><highlight class="normal">);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEBUG_SEGFAULT();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DECR(</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="664"><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DECRBY(</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decrement</highlight></codeline>
<codeline lineno="678"><highlight class="normal">);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEL(</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="693"><highlight class="normal">);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DISCARD();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DUMP(</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="716"><highlight class="normal">);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ECHO(</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a0a7db5807f63c88cd2386c1518c42d79" kindref="member">message</ref></highlight></codeline>
<codeline lineno="726"><highlight class="normal">);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVAL(</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>script,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numkeys,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>arg</highlight></codeline>
<codeline lineno="742"><highlight class="normal">);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVALSHA(</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sha1,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numkeys,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>arg</highlight></codeline>
<codeline lineno="758"><highlight class="normal">);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EXEC();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EXISTS(</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="778"><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EXPIRE(</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds</highlight></codeline>
<codeline lineno="792"><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EXPIREAT(</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>posix<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>timestamp</highlight></codeline>
<codeline lineno="806"><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FLUSHALL(</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>async<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal">);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FLUSHDB(</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>async<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal">);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEOADD(</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>longitude,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>latitude,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="850"><highlight class="normal">);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEOHASH(</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="864"><highlight class="normal">);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEOPOS(</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="878"><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEODIST(</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member1,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member2,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unit<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal">);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEORADIUS(</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>longitude,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>latitude,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unit,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withcoord<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withdist<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withhash<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>order<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>store_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>storedist_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEORADIUSBYMEMBER(</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unit,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withcoord<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withdist<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withhash<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>order<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>store_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>storedist_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GET(</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="994"><highlight class="normal">);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GETBIT(</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GETRANGE(</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GETSET(</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HDEL(</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HEXISTS(</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HGET(</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HGETALL(</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HINCRBY(</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HINCRBYFLOAT(</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>increment</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HKEYS(</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HLEN(</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HMGET(</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HMSET(</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HSET(</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HSETNX(</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HSTRLEN(</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HVALS(</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>INCR(</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>INCRBY(</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment</highlight></codeline>
<codeline lineno="1251"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>INCRBYFLOAT(</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>increment</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>INFO(</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>section<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>KEYS(</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pattern</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LASTSAVE();</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LINDEX(</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LINSERT(</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>where,</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pivot,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LLEN(</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LPOP(</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1357"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LPUSH(</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LPUSHX(</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1383"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LRANGE(</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop</highlight></codeline>
<codeline lineno="1401"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LREM(</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LSET(</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1432"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LTRIM(</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop</highlight></codeline>
<codeline lineno="1448"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_DOCTOR();</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_HELP();</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_MALLOC_STATS();</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_PURGE();</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_STATS();</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_USAGE(</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MGET(</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1514"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MIGRATE(</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>host,</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>port,</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination_db,</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout,</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>copy<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>replace<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>auth_password<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>keys_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MONITOR();</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MOVE(</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>db</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MSET(</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1584"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MSETNX(</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1597"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MULTI();</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OBJECT(</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>subcommand,</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>arguments<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PERSIST(</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1630"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEXPIRE(</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds</highlight></codeline>
<codeline lineno="1644"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEXPIREAT(</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>posix<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>milliseconds_timestamp</highlight></codeline>
<codeline lineno="1658"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PFADD(</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>element</highlight></codeline>
<codeline lineno="1671"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PFCOUNT(</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1685"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PFMERGE(</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destkey,</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sourcekey</highlight></codeline>
<codeline lineno="1700"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PING(</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a0a7db5807f63c88cd2386c1518c42d79" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PSETEX(</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds,</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1725"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PUBSUB(</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>subcommand,</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>argument<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PTTL(</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1753"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PUBLISH(</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a778deff645dba834b490c9ef2b99fcfa" kindref="member">channel</ref>,</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a0a7db5807f63c88cd2386c1518c42d79" kindref="member">message</ref></highlight></codeline>
<codeline lineno="1767"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QUIT();</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RANDOMKEY();</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>READONLY();</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>READWRITE();</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RENAME(</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>newkey</highlight></codeline>
<codeline lineno="1819"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RENAMENX(</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>newkey</highlight></codeline>
<codeline lineno="1833"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RESTORE(</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ttl,</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>serialized_value,</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>replace<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>absttl<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idletime_seconds<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq_frequency<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ROLE();</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RPOP(</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1885"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RPOPLPUSH(</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>source,</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RPUSH(</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1913"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RPUSHX(</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SADD(</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SAVE();</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCARD(</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCRIPT_DEBUG(</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>mode</highlight></codeline>
<codeline lineno="1975"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCRIPT_EXISTS(</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sha1</highlight></codeline>
<codeline lineno="1988"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCRIPT_FLUSH();</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCRIPT_KILL();</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCRIPT_LOAD(</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>script</highlight></codeline>
<codeline lineno="2020"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SDIFF(</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2032"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SDIFFSTORE(</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2046"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SELECT(</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index</highlight></codeline>
<codeline lineno="2057"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SET(</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>condition<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SETBIT(</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="2089"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SETEX(</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds,</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="2104"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SETNX(</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="2117"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SETRANGE(</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="2134"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SHUTDOWN(</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>save_mode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SINTER(</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2160"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SINTERSTORE(</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2175"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SISMEMBER(</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="2188"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SLAVEOF(</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>host,</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>port</highlight></codeline>
<codeline lineno="2199"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>REPLICAOF(</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>host,</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>port</highlight></codeline>
<codeline lineno="2210"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SLOWLOG(</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>subcommand,</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>argument<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SMEMBERS(</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2233"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SMOVE(</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>source,</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="2249"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SORT(</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>by_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>get_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>order<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sorting<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>store_destination<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SPOP(</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2295"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SRANDMEMBER(</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2310"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SREM(</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="2323"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>STRLEN(</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2335"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SUNION(</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2347"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SUNIONSTORE(</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2361"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SWAPDB(</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_1</highlight></codeline>
<codeline lineno="2374"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SYNC();</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TIME();</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TOUCH(</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2404"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TTL(</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2416"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TYPE(</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2428"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UNLINK(</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2442"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UNWATCH();</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WAIT(</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numreplicas,</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="2467"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WATCH(</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2479"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZADD(</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>condition<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>change<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>increment<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>score<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZCARD(</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="2519"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZCOUNT(</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max</highlight></codeline>
<codeline lineno="2535"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZINCRBY(</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment,</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="2550"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZINTERSTORE(</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numkeys,</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weights_weight<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>aggregate_aggregate<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZLEXCOUNT(</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>max</highlight></codeline>
<codeline lineno="2588"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZPOPMAX(</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2603"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZPOPMIN(</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2618"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZRANGE(</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop,</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withscores<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZRANGEBYLEX(</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>max,</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2659"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREVRANGEBYLEX(</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>max,</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2679"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZRANGEBYSCORE(</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max,</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withscores<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2705"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZRANK(</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="2718"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREM(</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="2732"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREMRANGEBYLEX(</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>max</highlight></codeline>
<codeline lineno="2747"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREMRANGEBYRANK(</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop</highlight></codeline>
<codeline lineno="2764"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREMRANGEBYSCORE(</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max</highlight></codeline>
<codeline lineno="2781"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREVRANGE(</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop,</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withscores<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREVRANGEBYSCORE(</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max,</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withscores<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2828"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREVRANK(</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="2841"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZSCORE(</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="2854"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZUNIONSTORE(</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numkeys,</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weights_weight<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>aggregate_aggregate<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCAN(</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor,</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>match_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SSCAN(</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor,</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>match_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2917"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HSCAN(</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor,</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>match_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2937"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZSCAN(</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor,</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>match_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2957"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XINFO(</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>consumers_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>consumers_groupname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>groups_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>stream_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>help<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XADD(</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID,</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str</highlight></codeline>
<codeline lineno="2997"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XTRIM(</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strategy,</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>approx<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="3021"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XDEL(</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID</highlight></codeline>
<codeline lineno="3035"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XRANGE(</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>end,</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="3053"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight></codeline>
<codeline lineno="3065"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XREVRANGE(</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>end,</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="3071"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XLEN(</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="3083"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XREAD(</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_milliseconds<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>streams<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XGROUP(</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>create_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>create_groupname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>create_id_or__<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>setid_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>setid_groupname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>setid_id_or__<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destroy_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destroy_groupname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>delconsumer_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>delconsumer_groupname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>delconsumer_consumername<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XREADGROUP(</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>group_group,</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>group_consumer,</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_milliseconds<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>noack<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>streams<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XACK(</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>group,</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID</highlight></codeline>
<codeline lineno="3180"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight></codeline>
<codeline lineno="3191"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XCLAIM(</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>group,</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>consumer,</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>min_idle_time,</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID,</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idle_ms<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_ms_unix_time<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retrycount_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="3203"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XPENDING(</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>group,</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>start<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>end<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>consumer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal">);</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"></highlight></codeline>
<codeline lineno="3227"><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementation<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>APPEND(</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="3232"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;APPEND&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AUTH(</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>password</highlight></codeline>
<codeline lineno="3242"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;AUTH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>password);</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BGREWRITEAOF()<sp/>{</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BGREWRITEAOF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BGSAVE()<sp/>{</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BGSAVE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BITCOUNT(</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="3267"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BITCOUNT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(start));</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(end));</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BITFIELD(</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>get_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>set_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_value<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>incrby_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incrby_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incrby_increment<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="3294"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BITFIELD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_type<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>get_type);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_offset<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(get_offset));</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_type<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>set_type);</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_offset<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(set_offset));</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_value<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(set_value));</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incrby_type<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>incrby_type);</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incrby_offset<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(incrby_offset));</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incrby_increment<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(incrby_increment));</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BITOP(</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>operation,</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destkey,</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="3314"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BITOP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>operation);</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destkey);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BITPOS(</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit,</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="3331"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BITPOS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(bit));</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(start));</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(end));</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"></highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BLPOP(</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="3345"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BLPOP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(timeout));</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BRPOP(</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="3357"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BRPOP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(timeout));</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BRPOPLPUSH(</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>source,</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="3372"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BRPOPLPUSH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destination);</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(timeout));</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BZPOPMIN(</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="3385"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BZPOPMIN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(timeout));</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BZPOPMAX(</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="3397"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BZPOPMAX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(timeout));</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_ID()<sp/>{</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLIENT_ID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_KILL(</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ip_port<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id_client_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>addr_ip_port<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>skipme_yes_no<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLIENT_KILL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip_port<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>ip_port);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(id_client_id<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(id_client_id));</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr_ip_port<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>addr_ip_port);</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skipme_yes_no<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>skipme_yes_no);</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_LIST()<sp/>{</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLIENT_LIST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_GETNAME()<sp/>{</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLIENT_GETNAME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_PAUSE(</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="3442"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLIENT_PAUSE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(timeout));</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_REPLY(</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>reply_mode</highlight></codeline>
<codeline lineno="3452"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLIENT_REPLY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>reply_mode);</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_SETNAME(</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>connection_name</highlight></codeline>
<codeline lineno="3461"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLIENT_SETNAME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>connection_name);</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLIENT_UNBLOCK(</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>client_id,</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unblock_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLIENT_UNBLOCK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>client_id);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unblock_type<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>unblock_type);</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_ADDSLOTS(</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot</highlight></codeline>
<codeline lineno="3483"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_ADDSLOTS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(slot));</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_COUNT_FAILURE_REPORTS(</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id</highlight></codeline>
<codeline lineno="3492"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_COUNT_FAILURE_REPORTS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>node_id);</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_COUNTKEYSINSLOT(</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot</highlight></codeline>
<codeline lineno="3502"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_COUNTKEYSINSLOT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(slot));</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_DELSLOTS(</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot</highlight></codeline>
<codeline lineno="3512"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_DELSLOTS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(slot));</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"></highlight></codeline>
<codeline lineno="3519"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_FAILOVER(</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>options<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_FAILOVER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_FORGET(</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id</highlight></codeline>
<codeline lineno="3531"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_FORGET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>node_id);</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_GETKEYSINSLOT(</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count</highlight></codeline>
<codeline lineno="3543"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_GETKEYSINSLOT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(slot));</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count));</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_INFO()<sp/>{</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_INFO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_KEYSLOT(</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="3559"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_KEYSLOT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_MEET(</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ip,</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port</highlight></codeline>
<codeline lineno="3570"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_MEET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>ip);</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(port));</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_NODES()<sp/>{</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_NODES&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_REPLICATE(</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id</highlight></codeline>
<codeline lineno="3586"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_REPLICATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>node_id);</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_RESET(</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>reset_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_RESET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reset_type<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>reset_type);</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_SAVECONFIG()<sp/>{</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_SAVECONFIG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_SET_CONFIG_EPOCH(</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>config_epoch</highlight></codeline>
<codeline lineno="3612"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_SET_CONFIG_EPOCH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(config_epoch));</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_SETSLOT(</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>subcommand,</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3625"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_SETSLOT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(slot));</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>subcommand);</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_id<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>node_id);</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_SLAVES(</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id</highlight></codeline>
<codeline lineno="3636"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_SLAVES&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>node_id);</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_REPLICAS(</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>node_id</highlight></codeline>
<codeline lineno="3645"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_REPLICAS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>node_id);</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"></highlight></codeline>
<codeline lineno="3652"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CLUSTER_SLOTS()<sp/>{</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CLUSTER_SLOTS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COMMAND()<sp/>{</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;COMMAND&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COMMAND_COUNT()<sp/>{</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;COMMAND_COUNT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COMMAND_GETKEYS()<sp/>{</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;COMMAND_GETKEYS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>COMMAND_INFO(</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>command_name</highlight></codeline>
<codeline lineno="3678"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;COMMAND_INFO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>command_name);</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONFIG_GET(</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>parameter</highlight></codeline>
<codeline lineno="3687"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CONFIG_GET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>parameter);</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONFIG_REWRITE()<sp/>{</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CONFIG_REWRITE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONFIG_SET(</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>parameter,</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="3703"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CONFIG_SET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>parameter);</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CONFIG_RESETSTAT()<sp/>{</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CONFIG_RESETSTAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DBSIZE()<sp/>{</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DBSIZE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEBUG_OBJECT(</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="3725"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEBUG_OBJECT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEBUG_SEGFAULT()<sp/>{</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEBUG_SEGFAULT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DECR(</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="3740"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DECR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DECRBY(</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decrement</highlight></codeline>
<codeline lineno="3751"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DECRBY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(decrement));</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEL(</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="3761"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DISCARD()<sp/>{</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DISCARD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DUMP(</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="3776"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DUMP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"></highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ECHO(</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a0a7db5807f63c88cd2386c1518c42d79" kindref="member">message</ref></highlight></codeline>
<codeline lineno="3785"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ECHO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a0a7db5807f63c88cd2386c1518c42d79" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"></highlight></codeline>
<codeline lineno="3792"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVAL(</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>script,</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numkeys,</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>arg</highlight></codeline>
<codeline lineno="3798"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;EVAL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>script);</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(numkeys));</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>arg);</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EVALSHA(</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sha1,</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numkeys,</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>arg</highlight></codeline>
<codeline lineno="3814"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;EVALSHA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>sha1);</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(numkeys));</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>arg);</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EXEC()<sp/>{</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;EXEC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EXISTS(</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="3832"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;EXISTS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EXPIRE(</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds</highlight></codeline>
<codeline lineno="3843"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;EXPIRE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(seconds));</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>EXPIREAT(</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>posix<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>timestamp</highlight></codeline>
<codeline lineno="3855"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;EXPIREAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>timestamp);</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FLUSHALL(</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>async<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3866"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;FLUSHALL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(async<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>async);</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FLUSHDB(</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>async<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;FLUSHDB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(async<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>async);</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"></highlight></codeline>
<codeline lineno="3883"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEOADD(</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>longitude,</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>latitude,</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="3890"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GEOADD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(longitude,<sp/>0));</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(latitude,<sp/>0));</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEOHASH(</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="3903"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GEOHASH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"></highlight></codeline>
<codeline lineno="3911"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEOPOS(</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="3914"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GEOPOS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"></highlight></codeline>
<codeline lineno="3922"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEODIST(</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member1,</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member2,</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unit<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GEODIST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member1);</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member2);</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unit<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>unit);</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"></highlight></codeline>
<codeline lineno="3937"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEORADIUS(</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>longitude,</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>latitude,</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unit,</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withcoord<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withdist<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withhash<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>order<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>store_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>storedist_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GEORADIUS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(longitude,<sp/>0));</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(latitude,<sp/>0));</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(radius,<sp/>0));</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>unit);</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withcoord<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>withcoord);</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withdist<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>withdist);</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withhash<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>withhash);</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count_count));</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(order<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>order);</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(store_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>store_key);</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storedist_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>storedist_key);</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GEORADIUSBYMEMBER(</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member,</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>unit,</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withcoord<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withdist<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withhash<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>order<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>store_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>storedist_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4000"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GEORADIUSBYMEMBER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(radius,<sp/>0));</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>unit);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withcoord<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>withcoord);</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withdist<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>withdist);</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withhash<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>withhash);</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count_count));</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(order<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>order);</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(store_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>store_key);</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storedist_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>storedist_key);</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GET(</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4019"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GETBIT(</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset</highlight></codeline>
<codeline lineno="4030"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GETBIT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(offset));</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GETRANGE(</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end</highlight></codeline>
<codeline lineno="4044"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GETRANGE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(start));</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(end));</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GETSET(</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4056"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;GETSET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"></highlight></codeline>
<codeline lineno="4064"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HDEL(</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="4067"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HDEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"></highlight></codeline>
<codeline lineno="4075"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HEXISTS(</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="4078"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HEXISTS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"></highlight></codeline>
<codeline lineno="4086"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HGET(</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="4089"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HGET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"></highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HGETALL(</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4099"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HGETALL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"></highlight></codeline>
<codeline lineno="4106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HINCRBY(</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment</highlight></codeline>
<codeline lineno="4111"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HINCRBY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(increment));</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"></highlight></codeline>
<codeline lineno="4120"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HINCRBYFLOAT(</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>increment</highlight></codeline>
<codeline lineno="4125"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HINCRBYFLOAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(increment,<sp/>0));</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HKEYS(</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4136"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HKEYS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HLEN(</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4145"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HLEN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"></highlight></codeline>
<codeline lineno="4152"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HMGET(</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="4155"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HMGET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"></highlight></codeline>
<codeline lineno="4163"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HMSET(</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4167"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HMSET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"></highlight></codeline>
<codeline lineno="4176"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HSET(</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4180"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HSET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HSETNX(</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4193"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HSETNX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"></highlight></codeline>
<codeline lineno="4202"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HSTRLEN(</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field</highlight></codeline>
<codeline lineno="4205"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HSTRLEN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"></highlight></codeline>
<codeline lineno="4213"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HVALS(</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4215"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HVALS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"></highlight></codeline>
<codeline lineno="4222"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>INCR(</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4224"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;INCR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>INCRBY(</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment</highlight></codeline>
<codeline lineno="4235"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;INCRBY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(increment));</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"></highlight></codeline>
<codeline lineno="4243"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>INCRBYFLOAT(</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>increment</highlight></codeline>
<codeline lineno="4247"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;INCRBYFLOAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(increment,<sp/>0));</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>INFO(</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>section<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4257"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(section<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>section);</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>KEYS(</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pattern</highlight></codeline>
<codeline lineno="4266"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;KEYS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>pattern);</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LASTSAVE()<sp/>{</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LASTSAVE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"></highlight></codeline>
<codeline lineno="4279"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LINDEX(</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index</highlight></codeline>
<codeline lineno="4283"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LINDEX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(index));</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"></highlight></codeline>
<codeline lineno="4291"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LINSERT(</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>where,</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>pivot,</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4297"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LINSERT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>where);</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>pivot);</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight></codeline>
<codeline lineno="4307"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LLEN(</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4309"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LLEN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"></highlight></codeline>
<codeline lineno="4316"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LPOP(</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4318"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LPOP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"></highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LPUSH(</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4328"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LPUSH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LPUSHX(</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4339"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LPUSHX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"></highlight></codeline>
<codeline lineno="4347"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LRANGE(</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop</highlight></codeline>
<codeline lineno="4353"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LRANGE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(start));</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(stop));</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LREM(</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4367"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LREM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count));</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LSET(</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4381"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LSET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(index));</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"></highlight></codeline>
<codeline lineno="4390"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LTRIM(</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop</highlight></codeline>
<codeline lineno="4396"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;LTRIM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(start));</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(stop));</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_DOCTOR()<sp/>{</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MEMORY_DOCTOR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_HELP()<sp/>{</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MEMORY_HELP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight></codeline>
<codeline lineno="4417"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_MALLOC_STATS()<sp/>{</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MEMORY_MALLOC_STATS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_PURGE()<sp/>{</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MEMORY_PURGE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"></highlight></codeline>
<codeline lineno="4429"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_STATS()<sp/>{</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MEMORY_STATS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"></highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEMORY_USAGE(</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="4439"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MEMORY_USAGE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samples_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(samples_count));</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"></highlight></codeline>
<codeline lineno="4447"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MGET(</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4449"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MGET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"></highlight></codeline>
<codeline lineno="4456"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MIGRATE(</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>host,</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>port,</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination_db,</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout,</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>copy<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>replace<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>auth_password<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>keys_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MIGRATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>host);</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>port);</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(destination_db));</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(timeout));</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>copy);</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replace<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>replace);</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(auth_password<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>auth_password);</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keys_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>keys_key);</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"></highlight></codeline>
<codeline lineno="4487"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MONITOR()<sp/>{</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MONITOR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MOVE(</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>db</highlight></codeline>
<codeline lineno="4497"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MOVE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(db));</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"></highlight></codeline>
<codeline lineno="4505"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MSET(</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4508"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MSET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"></highlight></codeline>
<codeline lineno="4516"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MSETNX(</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4519"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MSETNX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MULTI()<sp/>{</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MULTI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"></highlight></codeline>
<codeline lineno="4533"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OBJECT(</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>subcommand,</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>arguments<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4536"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;OBJECT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>subcommand);</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arguments<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>arguments);</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"></highlight></codeline>
<codeline lineno="4544"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PERSIST(</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4546"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PERSIST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"></highlight></codeline>
<codeline lineno="4553"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEXPIRE(</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds</highlight></codeline>
<codeline lineno="4557"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PEXPIRE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(milliseconds));</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"></highlight></codeline>
<codeline lineno="4565"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PEXPIREAT(</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>posix<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>milliseconds_timestamp</highlight></codeline>
<codeline lineno="4569"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PEXPIREAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>milliseconds_timestamp);</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PFADD(</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>element</highlight></codeline>
<codeline lineno="4580"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PFADD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>element);</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"></highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PFCOUNT(</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4590"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PFCOUNT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"></highlight></codeline>
<codeline lineno="4597"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PFMERGE(</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destkey,</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sourcekey</highlight></codeline>
<codeline lineno="4602"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PFMERGE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destkey);</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>sourcekey);</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"></highlight></codeline>
<codeline lineno="4610"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PING(</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a0a7db5807f63c88cd2386c1518c42d79" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4612"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structNWNX__Redis__PubSubMessageData_1a0a7db5807f63c88cd2386c1518c42d79" kindref="member">message</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a0a7db5807f63c88cd2386c1518c42d79" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"></highlight></codeline>
<codeline lineno="4619"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PSETEX(</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds,</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4624"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PSETEX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(milliseconds));</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"></highlight></codeline>
<codeline lineno="4633"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PUBSUB(</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>subcommand,</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>argument<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4636"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PUBSUB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>subcommand);</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argument<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>argument);</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"></highlight></codeline>
<codeline lineno="4644"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PTTL(</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4646"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PTTL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"></highlight></codeline>
<codeline lineno="4653"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PUBLISH(</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a778deff645dba834b490c9ef2b99fcfa" kindref="member">channel</ref>,</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a0a7db5807f63c88cd2386c1518c42d79" kindref="member">message</ref></highlight></codeline>
<codeline lineno="4656"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;PUBLISH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a778deff645dba834b490c9ef2b99fcfa" kindref="member">channel</ref>);</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/><ref refid="structNWNX__Redis__PubSubMessageData_1a0a7db5807f63c88cd2386c1518c42d79" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QUIT()<sp/>{</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;QUIT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"></highlight></codeline>
<codeline lineno="4670"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RANDOMKEY()<sp/>{</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RANDOMKEY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"></highlight></codeline>
<codeline lineno="4676"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>READONLY()<sp/>{</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;READONLY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"></highlight></codeline>
<codeline lineno="4682"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>READWRITE()<sp/>{</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;READWRITE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"></highlight></codeline>
<codeline lineno="4688"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RENAME(</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>newkey</highlight></codeline>
<codeline lineno="4692"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RENAME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>newkey);</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"></highlight></codeline>
<codeline lineno="4700"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RENAMENX(</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>newkey</highlight></codeline>
<codeline lineno="4704"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RENAMENX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>newkey);</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RESTORE(</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ttl,</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>serialized_value,</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>replace<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>absttl<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idletime_seconds<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq_frequency<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="4725"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RESTORE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(ttl));</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>serialized_value);</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replace<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>replace);</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(absttl<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>absttl);</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idletime_seconds<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(idletime_seconds));</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq_frequency<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(freq_frequency));</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"></highlight></codeline>
<codeline lineno="4738"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ROLE()<sp/>{</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ROLE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"></highlight></codeline>
<codeline lineno="4744"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RPOP(</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4746"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RPOP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"></highlight></codeline>
<codeline lineno="4753"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RPOPLPUSH(</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>source,</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination</highlight></codeline>
<codeline lineno="4758"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RPOPLPUSH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destination);</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"></highlight></codeline>
<codeline lineno="4766"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RPUSH(</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4769"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RPUSH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"></highlight></codeline>
<codeline lineno="4777"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RPUSHX(</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4780"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RPUSHX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SADD(</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="4791"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SADD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"></highlight></codeline>
<codeline lineno="4799"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SAVE()<sp/>{</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SAVE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"></highlight></codeline>
<codeline lineno="4805"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCARD(</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4807"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SCARD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"></highlight></codeline>
<codeline lineno="4814"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCRIPT_DEBUG(</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>mode</highlight></codeline>
<codeline lineno="4817"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SCRIPT_DEBUG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>mode);</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"></highlight></codeline>
<codeline lineno="4824"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCRIPT_EXISTS(</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sha1</highlight></codeline>
<codeline lineno="4826"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SCRIPT_EXISTS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>sha1);</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"></highlight></codeline>
<codeline lineno="4833"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCRIPT_FLUSH()<sp/>{</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SCRIPT_FLUSH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCRIPT_KILL()<sp/>{</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SCRIPT_KILL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"></highlight></codeline>
<codeline lineno="4845"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCRIPT_LOAD(</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>script</highlight></codeline>
<codeline lineno="4847"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SCRIPT_LOAD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>script);</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"></highlight></codeline>
<codeline lineno="4854"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SDIFF(</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4856"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SDIFF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SDIFFSTORE(</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4867"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SDIFFSTORE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destination);</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"></highlight></codeline>
<codeline lineno="4875"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SELECT(</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index</highlight></codeline>
<codeline lineno="4878"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SELECT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(index));</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SET(</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>condition<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4890"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>condition);</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"></highlight></codeline>
<codeline lineno="4899"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SETBIT(</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4904"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SETBIT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(offset));</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight></codeline>
<codeline lineno="4913"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SETEX(</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds,</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4918"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SETEX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(seconds));</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"></highlight></codeline>
<codeline lineno="4927"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SETNX(</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4930"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SETNX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"></highlight></codeline>
<codeline lineno="4938"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SETRANGE(</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="4943"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SETRANGE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(offset));</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"></highlight></codeline>
<codeline lineno="4952"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SHUTDOWN(</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>save_mode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4955"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SHUTDOWN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(save_mode<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>save_mode);</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"></highlight></codeline>
<codeline lineno="4962"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SINTER(</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4964"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SINTER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"></highlight></codeline>
<codeline lineno="4971"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SINTERSTORE(</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="4975"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SINTERSTORE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destination);</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"></highlight></codeline>
<codeline lineno="4983"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SISMEMBER(</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="4986"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SISMEMBER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SLAVEOF(</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>host,</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>port</highlight></codeline>
<codeline lineno="4997"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SLAVEOF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>host);</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>port);</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"></highlight></codeline>
<codeline lineno="5005"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>REPLICAOF(</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>host,</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>port</highlight></codeline>
<codeline lineno="5008"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;REPLICAOF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>host);</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>port);</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"></highlight></codeline>
<codeline lineno="5016"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SLOWLOG(</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>subcommand,</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>argument<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SLOWLOG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>subcommand);</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argument<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>argument);</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"></highlight></codeline>
<codeline lineno="5027"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SMEMBERS(</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5029"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMEMBERS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"></highlight></codeline>
<codeline lineno="5036"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SMOVE(</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>source,</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="5042"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SMOVE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>source);</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destination);</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"></highlight></codeline>
<codeline lineno="5051"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SORT(</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>by_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>get_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>order<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sorting<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>store_destination<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5066"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SORT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(by_pattern<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>by_pattern);</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_offset<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(limit_offset));</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(limit_count));</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_pattern<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>get_pattern);</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(order<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>order);</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sorting<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>sorting);</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(store_destination<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>store_destination);</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"></highlight></codeline>
<codeline lineno="5080"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SPOP(</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5084"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SPOP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count));</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"></highlight></codeline>
<codeline lineno="5092"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SRANDMEMBER(</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5096"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SRANDMEMBER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count));</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"></highlight></codeline>
<codeline lineno="5104"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SREM(</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="5107"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SREM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"></highlight></codeline>
<codeline lineno="5115"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>STRLEN(</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5117"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;STRLEN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"></highlight></codeline>
<codeline lineno="5124"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SUNION(</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5126"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SUNION&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"></highlight></codeline>
<codeline lineno="5133"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SUNIONSTORE(</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5137"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SUNIONSTORE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destination);</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"></highlight></codeline>
<codeline lineno="5145"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SWAPDB(</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_1</highlight></codeline>
<codeline lineno="5150"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SWAPDB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(index));</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(index_1));</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"></highlight></codeline>
<codeline lineno="5158"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SYNC()<sp/>{</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SYNC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"></highlight></codeline>
<codeline lineno="5164"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TIME()<sp/>{</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TIME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"></highlight></codeline>
<codeline lineno="5170"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TOUCH(</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5172"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TOUCH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"></highlight></codeline>
<codeline lineno="5179"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TTL(</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5181"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TTL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"></highlight></codeline>
<codeline lineno="5188"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TYPE(</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5190"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TYPE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"></highlight></codeline>
<codeline lineno="5197"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UNLINK(</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5199"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UNLINK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"></highlight></codeline>
<codeline lineno="5206"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UNWATCH()<sp/>{</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UNWATCH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WAIT(</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numreplicas,</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout</highlight></codeline>
<codeline lineno="5217"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;WAIT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(numreplicas));</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(timeout));</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WATCH(</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5227"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;WATCH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"></highlight></codeline>
<codeline lineno="5234"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZADD(</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>condition<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>change<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>increment<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>score<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5245"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZADD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>condition);</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(change<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>change);</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(increment<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>increment);</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(score,<sp/>0));</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"></highlight></codeline>
<codeline lineno="5257"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZCARD(</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5259"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZCARD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"></highlight></codeline>
<codeline lineno="5266"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZCOUNT(</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max</highlight></codeline>
<codeline lineno="5272"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZCOUNT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(min,<sp/>0));</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(max,<sp/>0));</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"></highlight></codeline>
<codeline lineno="5281"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZINCRBY(</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment,</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="5286"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZINCRBY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(increment));</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"></highlight></codeline>
<codeline lineno="5295"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZINTERSTORE(</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numkeys,</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weights_weight<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>aggregate_aggregate<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5305"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZINTERSTORE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destination);</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(numkeys));</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights_weight<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(weights_weight));</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aggregate_aggregate<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>aggregate_aggregate);</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"></highlight></codeline>
<codeline lineno="5316"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZLEXCOUNT(</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>max</highlight></codeline>
<codeline lineno="5320"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZLEXCOUNT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>min);</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>max);</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"></highlight></codeline>
<codeline lineno="5329"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZPOPMAX(</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5333"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZPOPMAX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count));</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"></highlight></codeline>
<codeline lineno="5341"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZPOPMIN(</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5345"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZPOPMIN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count));</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"></highlight></codeline>
<codeline lineno="5353"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZRANGE(</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop,</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withscores<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5361"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZRANGE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(start));</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(stop));</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withscores<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>withscores);</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"></highlight></codeline>
<codeline lineno="5371"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZRANGEBYLEX(</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>max,</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5379"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZRANGEBYLEX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>min);</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>max);</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_offset<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(limit_offset));</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(limit_count));</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"></highlight></codeline>
<codeline lineno="5390"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREVRANGEBYLEX(</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>max,</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5398"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZREVRANGEBYLEX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>max);</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>min);</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_offset<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(limit_offset));</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(limit_count));</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"></highlight></codeline>
<codeline lineno="5409"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZRANGEBYSCORE(</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max,</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withscores<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5421"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZRANGEBYSCORE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(min,<sp/>0));</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(max,<sp/>0));</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withscores<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>withscores);</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_offset<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(limit_offset));</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(limit_count));</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"></highlight></codeline>
<codeline lineno="5433"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZRANK(</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="5436"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZRANK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"></highlight></codeline>
<codeline lineno="5444"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREM(</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="5447"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZREM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"></highlight></codeline>
<codeline lineno="5455"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREMRANGEBYLEX(</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>max</highlight></codeline>
<codeline lineno="5459"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZREMRANGEBYLEX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>min);</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>max);</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"></highlight></codeline>
<codeline lineno="5468"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREMRANGEBYRANK(</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop</highlight></codeline>
<codeline lineno="5474"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZREMRANGEBYRANK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(start));</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(stop));</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"></highlight></codeline>
<codeline lineno="5483"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREMRANGEBYSCORE(</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max</highlight></codeline>
<codeline lineno="5489"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZREMRANGEBYSCORE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(min,<sp/>0));</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(max,<sp/>0));</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"></highlight></codeline>
<codeline lineno="5498"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREVRANGE(</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop,</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withscores<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5506"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZREVRANGE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(start));</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(stop));</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withscores<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>withscores);</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"></highlight></codeline>
<codeline lineno="5516"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREVRANGEBYSCORE(</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max,</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min,</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>withscores<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_offset<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5528"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZREVRANGEBYSCORE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(max,<sp/>0));</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>FloatToString(min,<sp/>0));</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withscores<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>withscores);</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_offset<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(limit_offset));</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(limit_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(limit_count));</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"></highlight></codeline>
<codeline lineno="5540"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZREVRANK(</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="5543"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZREVRANK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"></highlight></codeline>
<codeline lineno="5551"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZSCORE(</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>member</highlight></codeline>
<codeline lineno="5554"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZSCORE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>member);</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"></highlight></codeline>
<codeline lineno="5562"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZUNIONSTORE(</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destination,</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numkeys,</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weights_weight<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>aggregate_aggregate<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5572"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZUNIONSTORE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destination);</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(numkeys));</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights_weight<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(weights_weight));</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aggregate_aggregate<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>aggregate_aggregate);</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"></highlight></codeline>
<codeline lineno="5583"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SCAN(</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor,</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>match_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>type_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5591"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SCAN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(cursor));</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_pattern<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>match_pattern);</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count_count));</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_type<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>type_type);</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"></highlight></codeline>
<codeline lineno="5601"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SSCAN(</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor,</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>match_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5609"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SSCAN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(cursor));</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_pattern<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>match_pattern);</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count_count));</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"></highlight></codeline>
<codeline lineno="5619"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HSCAN(</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor,</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>match_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5627"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HSCAN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(cursor));</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_pattern<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>match_pattern);</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count_count));</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"></highlight></codeline>
<codeline lineno="5637"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZSCAN(</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor,</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>match_pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5645"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ZSCAN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(cursor));</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_pattern<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>match_pattern);</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count_count));</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"></highlight></codeline>
<codeline lineno="5655"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XINFO(</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>consumers_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>consumers_groupname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>groups_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>stream_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>help<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5665"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XINFO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consumers_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>consumers_key);</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consumers_groupname<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>consumers_groupname);</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(groups_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>groups_key);</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stream_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>stream_key);</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(help<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>help);</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"></highlight></codeline>
<codeline lineno="5676"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XADD(</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID,</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>field,</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str</highlight></codeline>
<codeline lineno="5682"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XADD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>ID);</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"></highlight></codeline>
<codeline lineno="5692"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XTRIM(</highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>strategy,</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>approx<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5700"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XTRIM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>strategy);</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(approx<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>approx);</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count));</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"></highlight></codeline>
<codeline lineno="5710"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XDEL(</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID</highlight></codeline>
<codeline lineno="5713"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XDEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>ID);</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"></highlight></codeline>
<codeline lineno="5721"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XRANGE(</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>end,</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5727"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XRANGE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>start);</highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>end);</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count_count));</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"></highlight></codeline>
<codeline lineno="5737"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XREVRANGE(</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>end,</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>start,</highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5743"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XREVRANGE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>end);</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>start);</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count_count));</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5752"><highlight class="normal"></highlight></codeline>
<codeline lineno="5753"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XLEN(</highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key</highlight></codeline>
<codeline lineno="5755"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XLEN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5761"><highlight class="normal"></highlight></codeline>
<codeline lineno="5762"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XREAD(</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_milliseconds<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>streams<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5771"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XREAD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count_count));</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_milliseconds<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(block_milliseconds));</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>streams);</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>ID);</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5781"><highlight class="normal"></highlight></codeline>
<codeline lineno="5782"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XGROUP(</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>create_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>create_groupname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>create_id_or__<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>setid_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>setid_groupname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>setid_id_or__<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destroy_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destroy_groupname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>delconsumer_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>delconsumer_groupname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>delconsumer_consumername<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5798"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XGROUP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(create_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>create_key);</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(create_groupname<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>create_groupname);</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(create_id_or__<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>create_id_or__);</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setid_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>setid_key);</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setid_groupname<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>setid_groupname);</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setid_id_or__<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>setid_id_or__);</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destroy_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destroy_key);</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destroy_groupname<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>destroy_groupname);</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delconsumer_key<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>delconsumer_key);</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delconsumer_groupname<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>delconsumer_groupname);</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delconsumer_consumername<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>delconsumer_consumername);</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"></highlight></codeline>
<codeline lineno="5815"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XREADGROUP(</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>group_group,</highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>group_consumer,</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_milliseconds<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>noack<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>streams<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5828"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XREADGROUP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>group_group);</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>group_consumer);</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count_count));</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_milliseconds<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(block_milliseconds));</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noack<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>noack);</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>streams);</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>ID);</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"></highlight></codeline>
<codeline lineno="5842"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XACK(</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>group,</highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID</highlight></codeline>
<codeline lineno="5846"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XACK&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>group);</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>ID);</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"></highlight></codeline>
<codeline lineno="5855"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XCLAIM(</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>group,</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>consumer,</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>min_idle_time,</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ID,</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idle_ms<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_ms_unix_time<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retrycount_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="5867"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XCLAIM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>group);</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>consumer);</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>min_idle_time);</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>ID);</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idle_ms<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(idle_ms));</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_ms_unix_time<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(time_ms_unix_time));</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retrycount_count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(retrycount_count));</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"></highlight></codeline>
<codeline lineno="5881"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XPENDING(</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key,</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>group,</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>start<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>end<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redis<sp/>type:<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>consumer<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5889"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;XPENDING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>key);</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>group);</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>start);</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>end);</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>!=<sp/>0)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>IntToString(count));</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consumer<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>NWNX_PushArgumentString(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">,<sp/>consumer);</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/>NWNX_CallFunction(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(</highlight><highlight class="stringliteral">&quot;NWNX_Redis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Deferred&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Plugins/Redis/NWScript/nwnx_redis_short.nss"/>
  </compounddef>
</doxygen>
