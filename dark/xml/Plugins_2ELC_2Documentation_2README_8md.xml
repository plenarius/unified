<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="Plugins_2ELC_2Documentation_2README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>ELC<sp/>Plugin<sp/>Reference</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Description</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>NWNX<sp/>replacement<sp/>for<sp/>ValidateCharacter:<sp/>ELC<sp/>&amp;<sp/>ILR</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>enabled<sp/>and<sp/>used<sp/>without<sp/>setting<sp/>an<sp/>ELC<sp/>script<sp/>it<sp/>will<sp/>function<sp/>just<sp/>like<sp/>ELC/ILR<sp/>in<sp/>the<sp/>base<sp/>game.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>is<sp/>a<sp/>pretty<sp/>advanced<sp/>plugin<sp/>and<sp/>may<sp/>at<sp/>times<sp/>require<sp/>you<sp/>to<sp/>dive<sp/>into<sp/>the<sp/>source<sp/>code<sp/>to<sp/>figure<sp/>out<sp/>what&apos;s<sp/>going<sp/>on.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Environment<sp/>Variables</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Variable<sp/>Name<sp/>|<sp/>Value<sp/>|<sp/>Default<sp/>|<sp/>Notes<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>-------------<sp/>|<sp/>:---:<sp/>|<sp/>:-----:<sp/>|<sp/>-----<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>`NWNX_ELC_ELC_SCRIPT`<sp/>|<sp/>string<sp/>|<sp/>&quot;&quot;<sp/>|<sp/>Set<sp/>the<sp/>NWScript<sp/>that<sp/>receives<sp/>all<sp/>the<sp/>ELC<sp/>validation<sp/>failure<sp/>events.</highlight></codeline>
<codeline><highlight class="normal">|<sp/>`NWNX_ELC_CUSTOM_ELC_CHECK`<sp/>|<sp/>true/false<sp/>|<sp/>false<sp/>|<sp/>Enables<sp/>the<sp/>custom<sp/>ELC<sp/>check,<sp/>an<sp/>ELC<sp/>script<sp/>must<sp/>be<sp/>set<sp/>for<sp/>it<sp/>to<sp/>run.</highlight></codeline>
<codeline><highlight class="normal">|<sp/>`NWNX_ELC_ENFORCE_DEFAULT_EVENT_SCRIPTS`<sp/>|<sp/>true/false<sp/>|<sp/>false<sp/>|<sp/>If<sp/>enabled,<sp/>resets<sp/>a<sp/>character&apos;s<sp/>event<sp/>scripts<sp/>to<sp/>`default`.<sp/>Requires<sp/>ELC<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline><highlight class="normal">|<sp/>`NWNX_ELC_ENFORCE_EMPTY_DIALOG_RESREF`<sp/>|<sp/>true/false<sp/>|<sp/>false<sp/>|<sp/>If<sp/>enabled,<sp/>resets<sp/>a<sp/>character&apos;s<sp/>dialog<sp/>resref<sp/>to<sp/>empty.<sp/>Requires<sp/>ELC<sp/>to<sp/>be<sp/>enabled.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Example<sp/>Script</highlight></codeline>
<codeline><highlight class="normal">```c</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_elc&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>object<sp/>oPC<sp/>=<sp/>OBJECT_SELF;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>nType<sp/>=<sp/>NWNX_ELC_GetValidationFailureType();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>nSubType<sp/>=<sp/>NWNX_ELC_GetValidationFailureSubType();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>nStrRef<sp/>=<sp/>NWNX_ELC_GetValidationFailureMessageStrRef();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>WriteTimestampedLogEntry(&quot;ELC:<sp/>FAIL:<sp/>&quot;<sp/>+<sp/>GetName(oPC)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>-&gt;<sp/>Type<sp/>=<sp/>&quot;<sp/>+IntToString(nType)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,<sp/>SubType<sp/>=<sp/>&quot;<sp/>+IntToString(nSubType)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,<sp/>StrRef<sp/>=<sp/>&quot;<sp/>+<sp/>IntToString(nStrRef));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>MrMunchkin<sp/>is<sp/>friends<sp/>with<sp/>the<sp/>server<sp/>owner<sp/>and<sp/>gets<sp/>to<sp/>skip<sp/>any<sp/>ILR<sp/>MinEquipLevel<sp/>failures</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(nSubType<sp/>==<sp/>NWNX_ELC_SUBTYPE_MIN_EQUIP_LEVEL)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(GetPCPublicCDKey(oPC)<sp/>==<sp/>&quot;OMG1337&quot;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_ELC_SkipValidationFailure();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>The<sp/>validation<sp/>failure<sp/>happened<sp/>on<sp/>our<sp/>current<sp/>level<sp/>so<sp/>we<sp/>could</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>just<sp/>roll<sp/>back<sp/>their<sp/>last<sp/>level</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(GetHitDice(oPC)<sp/>==<sp/>NWNX_ELC_GetValidationFailureLevel())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Do<sp/>XP<sp/>Stuff<sp/>here</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Send<sp/>message<sp/>to<sp/>player</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Etc</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>NWNX_ELC_SkipValidationFailure();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>return;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(nType)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_CHARACTER:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>We<sp/>allow<sp/>colored<sp/>names<sp/>on<sp/>our<sp/>server</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(nSubType<sp/>==<sp/>NWNX_ELC_SUBTYPE_COLORED_NAME)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_ELC_SkipValidationFailure();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_ITEM:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object<sp/>oItem<sp/>=<sp/>NWNX_ELC_GetValidationFailureItem();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Unequip<sp/>the<sp/>item<sp/>instead<sp/>of<sp/>having<sp/>the<sp/>player<sp/>unable<sp/>to<sp/>login</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(GetIsObjectValid(oItem))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActionUnequipItem(oItem);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_ELC_SkipValidationFailure();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_SKILL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>We<sp/>don&apos;t<sp/>handle<sp/>skill<sp/>validation<sp/>failures</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_FEAT:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>We<sp/>ignore<sp/>the<sp/>ability<sp/>requirement<sp/>for<sp/>the<sp/>dodge<sp/>feat</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(nSubType<sp/>==<sp/>NWNX_ELC_SUBTYPE_FEAT_REQUIRED_ABILITY_VALUE_NOT_MET)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>nFeatID<sp/>=<sp/>NWNX_ELC_GetValidationFailureFeatID();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(nFeatID<sp/>==<sp/>FEAT_DODGE)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_ELC_SkipValidationFailure();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_SPELL:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>We<sp/>skip<sp/>all<sp/>spell<sp/>ELC<sp/>checks</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_ELC_SkipValidationFailure();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Enable<sp/>with<sp/>NWNX_ELC_EnableCustomELCCheck()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_CUSTOM:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Only<sp/>blue<sp/>haired<sp/>characters<sp/>allowed<sp/>on<sp/>our<sp/>server</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(GetColor(oPC,<sp/>COLOR_CHANNEL_HAIR)<sp/>==<sp/>25)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_ELC_SkipValidationFailure();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>Custom<sp/>Failure<sp/>Message:<sp/>Hair<sp/>Color</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_ELC_SetValidationFailureMessageStrRef(125);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"><sp/>```</highlight></codeline>
    </programlisting>
    <location file="Plugins/ELC/Documentation/README.md"/>
  </compounddef>
</doxygen>
