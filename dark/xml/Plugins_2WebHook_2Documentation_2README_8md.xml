<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="Plugins_2WebHook_2Documentation_2README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>WebHook<sp/>Plugin<sp/>Reference</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Description</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Allows<sp/>the<sp/>sending<sp/>of<sp/>WebHooks.<sp/>At<sp/>the<sp/>moment,<sp/>only<sp/>slack<sp/>application/json<sp/>format<sp/>is<sp/>supported.<sp/>See<sp/>https://api.slack.com/incoming-webhooks.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Events<sp/>exist<sp/>for<sp/>SUCCESS<sp/>or<sp/>FAILURE.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>Top<sp/>tip:<sp/>Append<sp/>`/slack`<sp/>to<sp/>the<sp/>end<sp/>of<sp/>a<sp/>Discord<sp/>webhook<sp/>url<sp/>for<sp/>it<sp/>to<sp/>work.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Limitations</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>added<sp/>security,<sp/>it<sp/>is<sp/>highly<sp/>recommended<sp/>to<sp/>set<sp/>your<sp/>webhook<sp/>path<sp/>as<sp/>an<sp/>environment<sp/>variable<sp/>and<sp/>use<sp/>`NWNX_Util_GetEnvironmentVariable`<sp/>to<sp/>construct<sp/>your<sp/>path.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Example<sp/>usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Example<sp/>1</highlight></codeline>
<codeline><highlight class="normal">The<sp/>builder<sp/>wants<sp/>to<sp/>be<sp/>notified<sp/>with<sp/>a<sp/>simple<sp/>message<sp/>when<sp/>the<sp/>module<sp/>has<sp/>completed<sp/>start<sp/>up</highlight></codeline>
<codeline><highlight class="normal">*<sp/>At<sp/>the<sp/>end<sp/>of<sp/>the<sp/>`on_module_load`<sp/>script,<sp/>add<sp/>the<sp/>following:</highlight></codeline>
<codeline><highlight class="normal">```c</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_webhook&quot;</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">NWNX_WebHook_SendWebHookHTTPS(&quot;discordapp.com&quot;,<sp/>NWNX_Util_GetEnvironmentVariable(&quot;NWNX_WEBHOOK_DEVELOPER_CHANNEL&quot;),<sp/>&quot;Module<sp/>has<sp/>completed<sp/>start<sp/>up.&quot;);</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Example<sp/>2</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>builder<sp/>wishes<sp/>to<sp/>create<sp/>a<sp/>function<sp/>to<sp/>post<sp/>a<sp/>bug<sp/>report<sp/>to<sp/>the<sp/>Discord<sp/>developer<sp/>channel.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```c</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_time&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_util&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_webhook_rch&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>ReportBug(string<sp/>sMessage,<sp/>object<sp/>oReporter=OBJECT_INVALID)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>object<sp/>oArea<sp/>=<sp/>GetArea(oReporter);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/>NWNX_WebHook_Message<sp/>stMessage;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sUsername<sp/>=<sp/>&quot;NWN<sp/>Reporter&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sText<sp/>=<sp/>&quot;Bug<sp/>Report&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sAvatarURL<sp/>=<sp/>&quot;https://example.com/img/icon.png&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sTitle<sp/>=<sp/>&quot;Add<sp/>to<sp/>Gitlab?&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sURL<sp/>=<sp/>&quot;https://gitlab.example.com/nwn/module/issues/new?issue[title]=&quot;+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;NWN+Bug+Report&amp;issue[description]=&quot;+NWNX_Util_EncodeStringForURL(sMessage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sColor<sp/>=<sp/>&quot;#FF0000&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sAuthorName<sp/>=<sp/>GetName(oReporter)<sp/>+<sp/>&quot;<sp/>(&quot;+<sp/>GetPCPlayerName(oReporter)+&quot;)&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sAuthorIconURL<sp/>=<sp/>&quot;https://example.com/img/portrait/&quot;<sp/>+<sp/>GetStringLowerCase(GetPortraitResRef(oReporter))<sp/>+<sp/>&quot;t.png&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sThumbnailURL<sp/>=<sp/>&quot;https://example.com/img/portrait/po_beetle_s.png&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sDescription<sp/>=<sp/>sMessage;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sFooterText<sp/>=<sp/>&quot;My_Module_1.00&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sField1Name<sp/>=<sp/>&quot;Area<sp/>Name&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sField1Value<sp/>=<sp/>GetName(oArea);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.iField1Inline<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sField2Name<sp/>=<sp/>&quot;Area<sp/>Tag&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sField2Value<sp/>=<sp/>GetTag(oArea);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.iField2Inline<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sField3Name<sp/>=<sp/>&quot;Location&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.sField3Value<sp/>=<sp/>NWNXLocationToString(GetLocation(oReporter));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stMessage.iTimestamp<sp/>=<sp/>NWNX_Time_GetTimeStamp();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>string<sp/>sConstructedMsg<sp/>=<sp/>NWNX_WebHook_BuildMessageForWebHook(&quot;discordapp.com&quot;,<sp/>NWNX_Util_GetEnvironmentVariable(&quot;NWNX_WEBHOOK_DEVELOPER_CHANNEL&quot;),<sp/>stMessage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_WebHook_SendWebHookHTTPS(&quot;discordapp.com&quot;,<sp/>NWNX_Util_GetEnvironmentVariable(&quot;NWNX_WEBHOOK_DEVELOPER_CHANNEL&quot;),<sp/>sConstructedMsg);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Example<sp/>3</highlight></codeline>
<codeline><highlight class="normal">The<sp/>builder<sp/>wishes<sp/>to<sp/>resend<sp/>a<sp/>WebHook<sp/>when<sp/>one<sp/>is<sp/>disallowed<sp/>due<sp/>to<sp/>rate<sp/>limitations.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>In<sp/>module<sp/>`OnModuleLoad`<sp/>add:</highlight></codeline>
<codeline><highlight class="normal">```c</highlight></codeline>
<codeline><highlight class="normal">NWNX_Events_SubscribeEvent(&quot;NWNX_ON_WEBHOOK_FAILED&quot;,<sp/>&quot;event_webhook&quot;);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Create<sp/>new<sp/>`event_webhook`<sp/>script<sp/>and<sp/>enter<sp/>the<sp/>following:</highlight></codeline>
<codeline><highlight class="normal">```c</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_events&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_webhook&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>object<sp/>oModule<sp/>=<sp/>OBJECT_SELF;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>string<sp/>sCurrentEvent<sp/>=<sp/>NWNX_Events_GetCurrentEvent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(sCurrentEvent<sp/>==<sp/>&quot;NWNX_ON_WEBHOOK_FAILED&quot;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>iStatus<sp/>=<sp/>StringToInt(NWNX_Events_GetEventData(&quot;STATUS&quot;));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Status<sp/>429<sp/>means<sp/>it<sp/>was<sp/>Rate<sp/>Limited</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(iStatus<sp/>==<sp/>429)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Reset<sp/>is<sp/>sent<sp/>in<sp/>milliseconds</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>delayToSend<sp/>=<sp/>StringToFloat(NWNX_Events_GetEventData(&quot;RETRY_AFTER&quot;))<sp/>/<sp/>1000.0f;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintString(&quot;WebHook<sp/>rate<sp/>limited,<sp/>resending<sp/>in<sp/>&quot;+FloatToString(delayToSend)+&quot;<sp/>seconds.&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>sMessage<sp/>=<sp/>NWNX_Events_GetEventData(&quot;MESSAGE&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>sHost<sp/>=<sp/>NWNX_Events_GetEventData(&quot;HOST&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>sPath<sp/>=<sp/>NWNX_Events_GetEventData(&quot;PATH&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_WebHook_ResendWebHookHTTPS(sHost,<sp/>sPath,<sp/>sMessage,<sp/>delayToSend);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Example<sp/>4</highlight></codeline>
<codeline><highlight class="normal">The<sp/>builder<sp/>wishes<sp/>to<sp/>notify<sp/>the<sp/>general<sp/>discord<sp/>channel<sp/>when<sp/>a<sp/>PC<sp/>reaches<sp/>a<sp/>new<sp/>level.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>In<sp/>module<sp/>`OnModuleLoad`<sp/>add:</highlight></codeline>
<codeline><highlight class="normal">```c</highlight></codeline>
<codeline><highlight class="normal">NWNX_Events_SubscribeEvent(&quot;NWNX_ON_LEVEL_UP_AFTER&quot;,<sp/>&quot;event_level&quot;);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Create<sp/>new<sp/>`event_level`<sp/>script<sp/>and<sp/>enter<sp/>the<sp/>following:</highlight></codeline>
<codeline><highlight class="normal">```c</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_events&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_time&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_util&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;nwnx_webhook_rch&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>object<sp/>oPC<sp/>=<sp/>OBJECT_SELF;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>string<sp/>sCurrentEvent<sp/>=<sp/>NWNX_Events_GetCurrentEvent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(sCurrentEvent<sp/>==<sp/>&quot;NWNX_ON_LEVEL_UP_AFTER&quot;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>NWNX_WebHook_Message<sp/>stMessage;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stMessage.sUsername<sp/>=<sp/>&quot;NWN<sp/>Reporter&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stMessage.sAvatarURL<sp/>=<sp/>&quot;https://example.com/img/icon.png&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stMessage.sTitle<sp/>=<sp/>&quot;New<sp/>Level!&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stMessage.sColor<sp/>=<sp/>&quot;#0000FF&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stMessage.sAuthorName<sp/>=<sp/>GetName(oPC);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stMessage.sAuthorIconURL<sp/>=<sp/>&quot;https://example.com/img/portrait/&quot;<sp/>+<sp/>GetStringLowerCase(GetPortraitResRef(oPC))<sp/>+<sp/>&quot;t.png&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stMessage.sThumbnailURL<sp/>=<sp/>&quot;https://example.com/img/portrait/&quot;<sp/>+<sp/>GetStringLowerCase(GetPortraitResRef(oPC))<sp/>+<sp/>&quot;s.png&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stMessage.sDescription<sp/>=<sp/>&quot;**&quot;<sp/>+<sp/>GetName(oPC)<sp/>+<sp/>&quot;**<sp/>has<sp/>reached<sp/>level<sp/>**&quot;+IntToString(GetHitDice(oPC))+&quot;**!<sp/>:tada:&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stMessage.sFooterText<sp/>=<sp/>&quot;My_Module_1.00&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stMessage.iTimestamp<sp/>=<sp/>NWNX_Time_GetTimeStamp();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>sConstructedMsg<sp/>=<sp/>NWNX_WebHook_BuildMessageForWebHook(&quot;hook.slack.com&quot;,<sp/>NWNX_Util_GetEnvironmentVariable(&quot;NWNX_WEBHOOK_PUBLIC_CHANNEL&quot;),<sp/>stMessage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_WebHook_SendWebHookHTTPS(&quot;hook.slack.com&quot;,<sp/>NWNX_Util_GetEnvironmentVariable(&quot;NWNX_WEBHOOK_PUBLIC_CHANNEL&quot;),<sp/>sConstructedMsg);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>Note<sp/>on<sp/>Portraits<sp/>as<sp/>Images</highlight></codeline>
<codeline><highlight class="normal">You<sp/>may<sp/>have<sp/>noticed<sp/>in<sp/>this<sp/>example<sp/>how<sp/>portraits<sp/>are<sp/>being<sp/>used<sp/>in<sp/>the<sp/>WebHooks<sp/>as<sp/>images.<sp/>If<sp/>you<sp/>want<sp/>to<sp/>know<sp/>how<sp/>I<sp/>converted<sp/>portraits<sp/>to<sp/>images<sp/>to<sp/>use<sp/>for<sp/>this,<sp/>here<sp/>were<sp/>the<sp/>commands<sp/>used:</highlight></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">mkdir<sp/>/tmp/tga</highlight></codeline>
<codeline><highlight class="normal">#<sp/>From<sp/>the<sp/>top<sp/>level<sp/>you<sp/>wish<sp/>to<sp/>search<sp/>for<sp/>your<sp/>portraits</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Don&apos;t<sp/>forget<sp/>to<sp/>include<sp/>the<sp/>stock<sp/>portraits<sp/>here<sp/>as<sp/>well!</highlight></codeline>
<codeline><highlight class="normal">find<sp/>.<sp/>\(<sp/>-iname<sp/>&quot;*_t.tga&quot;<sp/>-o<sp/>-iname<sp/>&quot;*_s.tga&quot;<sp/>\)<sp/>-exec<sp/>cp<sp/>--<sp/>&quot;{}&quot;<sp/>/tmp/tga<sp/>\;</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>/tmp/tga</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Make<sp/>them<sp/>all<sp/>lowercase</highlight></codeline>
<codeline><highlight class="normal">rename<sp/>-f<sp/>&apos;y/A-Z/a-z/&apos;<sp/>*</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Convert<sp/>to<sp/>png<sp/>while<sp/>cropping<sp/>bottom<sp/>unused<sp/>portion<sp/>of<sp/>tga</highlight></codeline>
<codeline><highlight class="normal">for<sp/>i<sp/>in<sp/>*_t.tga;<sp/>do<sp/>convert<sp/>$i<sp/>-crop<sp/>16x25+0+0<sp/>$i.png;<sp/>done</highlight></codeline>
<codeline><highlight class="normal">for<sp/>i<sp/>in<sp/>*_s.tga;<sp/>do<sp/>convert<sp/>$i<sp/>-crop<sp/>32x50+0+0<sp/>$i.png;<sp/>done</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Rename<sp/>from<sp/>foo.tga.png<sp/>to<sp/>foo.png</highlight></codeline>
<codeline><highlight class="normal">rename<sp/>s/tga.png/png/<sp/>*.tga.png</highlight></codeline>
<codeline><highlight class="normal">mkdir<sp/>/tmp/png</highlight></codeline>
<codeline><highlight class="normal">mv<sp/>*.png<sp/>/tmp/png</highlight></codeline>
<codeline><highlight class="normal">#<sp/>Now<sp/>upload<sp/>to<sp/>your<sp/>web<sp/>server</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
    </programlisting>
    <location file="Plugins/WebHook/Documentation/README.md"/>
  </compounddef>
</doxygen>
