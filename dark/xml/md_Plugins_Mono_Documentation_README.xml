<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="md_Plugins_Mono_Documentation_README" kind="page">
    <compoundname>md_Plugins_Mono_Documentation_README</compoundname>
    <title>Mono Plugin Reference</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<sect1 id="md_Plugins_Mono_Documentation_README_1autotoc_md91">
<title>Description</title>
<para>Allow users to see sharp. More specifically, this plugin enables developers to write scripts in C# using the Mono framework.</para>
</sect1>
<sect1 id="md_Plugins_Mono_Documentation_README_1autotoc_md92">
<title>How to see sharp?</title>
<para><itemizedlist>
<listitem><para>Follow these instructions to add the Mono repository to your apt sources: <ulink url="https://www.mono-project.com/download/stable/#download-lin-debian">https://www.mono-project.com/download/stable/#download-lin-debian</ulink></para>
</listitem><listitem><para>Make sure the version at the top of the above page is 5.16.0 Stable (5.16.0.220). If it isn&apos;t, install libmono-2.0-dev:i386, then find libmono-2.0.a and copy it to the Plugins/Mono/lib folder.</para>
</listitem><listitem><para>Make sure you have the mono-complete package installed. The version of the package MUST match the version of the 32-bit shared library from the step above. If it doesn&apos;t, you may encounter run-time failures.</para>
</listitem><listitem><para>Make sure you have a binary compiled that exports one or more scripts.</para>
</listitem><listitem><para>To export a script, follow this structure, where the class name is the name of the .nss script you want to replace. If I had m_hb set to the module heartbeat script, with the following code, when the m_hb would be called in nwscript, it is instead called in C#:</para>
</listitem></itemizedlist>
</para>
<para><programlisting><codeline><highlight class="normal">namespace<sp/>NWN.Scripts</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>class<sp/>m_hb</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>void<sp/>Main()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console.WriteLine(&quot;I<sp/>wrote<sp/>this<sp/>line<sp/>from<sp/>Mono!&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><ndash/> This also works for StartingConditionals. Just give your main function a return value as such, and return NWScript.TR UE or NWScript.FALSE.</para>
<para><programlisting><codeline><highlight class="normal">static<sp/>int<sp/>Main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>NWScript.GetLevelByClass(NWScript.CLASS_TYPE_CLERIC,<sp/>NWScript.GetPCSpeaker())<sp/>!=<sp/>0<sp/>?<sp/>NWScript.TRUE<sp/>:<sp/>NWScript.FALSE;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><itemizedlist>
<listitem><para>If you want to use the nwscript API, make sure to compile the various INTERNAL_*.cs files in the CSharpAPI folder. Here are some examples of using the API:</para>
</listitem></itemizedlist>
</para>
<para><programlisting><codeline><highlight class="normal">NWScript.SendMessageToPC(NWScript.GetFirstPC(),<sp/>&quot;Rawr!<sp/>It<sp/>is<sp/>me!<sp/>Mario&quot;);</highlight></codeline>
<codeline><highlight class="normal">NWScript.DelayCommand(1.0f,<sp/>()<sp/>=&gt;<sp/>NWScript.SendMessageToPC(NWScript.GetFirstPC(),<sp/>&quot;Hello!<sp/>This<sp/>is<sp/>a<sp/>delayed<sp/>command.&quot;));</highlight></codeline>
<codeline><highlight class="normal">NWScript.AssignCommand(NWScript.GetFirstPC(),<sp/>()<sp/>=&gt;<sp/>NWScript.ActionDoCommand(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/>=&gt;<sp/>NWScript.ActionSpeakString(&quot;Hello!<sp/>I<sp/>am<sp/>speaking<sp/>this<sp/>string!&quot;)));</highlight></codeline>
</programlisting></para>
<para><itemizedlist>
<listitem><para>To compile your scripts, invoke csc as such:</para>
</listitem></itemizedlist>
</para>
<para><programlisting><codeline><highlight class="normal">csc<sp/>-platform:x86<sp/>-t:library<sp/>-out:[yourbinarypathgoeshere.so]<sp/>INTERNAL_Internal.cs<sp/>[other<sp/>INTERNAL_*.cs<sp/>scripts<sp/>go<sp/>here<sp/>...]<sp/>[your<sp/>scripts<sp/>go<sp/>here<sp/>...]</highlight></codeline>
</programlisting></para>
<para><itemizedlist>
<listitem><para>If something goes wrong, try setting the log level to 7. There is extensive (and slow, so don&apos;t always leave it on) debug logging available.</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="md_Plugins_Mono_Documentation_README_1autotoc_md93">
<title>Remote Debugging</title>
<para>It is possible to remotely debug running code on your server through Visual Studio 2017.</para>
<para><itemizedlist>
<listitem><para>Install VSMonoDebugger extension. (<ulink url="https://marketplace.visualstudio.com/items?itemName=GordianDotNet.VSMonoDebugger0d62">https://marketplace.visualstudio.com/items?itemName=GordianDotNet.VSMonoDebugger0d62</ulink>)</para>
</listitem><listitem><para>Setup the VSMonoDebugger options within VS2017 (Mono -&gt; Settings...) such that it has the correct Remote Host IP. Change the Mono Debug Port to 10000. The rest of the options do not matter.</para>
</listitem><listitem><para>Build your solution.</para>
</listitem><listitem><para>Generate MDB files from PDB files. (Mono -&gt; Build Startup Project with MDB Files)</para>
</listitem><listitem><para>Run NWNX with ALLOW_REMOTE_DEBUGGING set to true.</para>
</listitem><listitem><para>Attach. (Mono -&gt; Attach to mono debugger).</para>
</listitem><listitem><para>If your breakpoints are not hit, the MDB and PDB files may be out of sync. On your server, invoke <computeroutput>pdb2mdb dll_name</computeroutput> to generate an up to date MDB.</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="md_Plugins_Mono_Documentation_README_1autotoc_md94">
<title>Limitations</title>
<para>There is no support for hotloading yet.</para>
</sect1>
<sect1 id="md_Plugins_Mono_Documentation_README_1autotoc_md95">
<title>Environment Variables</title>
<para><programlisting><codeline><highlight class="normal">ASSEMBLY<sp/>[mandatory]:<sp/>The<sp/>path<sp/>to<sp/>the<sp/>compiled<sp/>binary<sp/>containing<sp/>your<sp/>C#<sp/>code.<sp/>Mandatory.</highlight></codeline>
<codeline><highlight class="normal">SCRIPT_METRICS<sp/>[optional]:<sp/>Whether<sp/>metrics<sp/>are<sp/>exported<sp/>for<sp/>script<sp/>execution<sp/>timings.</highlight></codeline>
<codeline><highlight class="normal">CLOSURE_METRICS<sp/>[optional]:<sp/>Whether<sp/>metrics<sp/>are<sp/>exported<sp/>for<sp/>closure<sp/>timings.</highlight></codeline>
<codeline><highlight class="normal">MAIN_LOOP_METRICS<sp/>[optional]:<sp/>Whether<sp/>metrics<sp/>are<sp/>exported<sp/>for<sp/>main<sp/>loop<sp/>tick<sp/>timings.</highlight></codeline>
<codeline><highlight class="normal">CONFIG_PATH<sp/>[optional]:<sp/>The<sp/>path<sp/>to<sp/>the<sp/>Mono<sp/>config<sp/>file.<sp/>Advanced<sp/>users<sp/>only.</highlight></codeline>
<codeline><highlight class="normal">BASE_DIRECTORY<sp/>[optional]:<sp/>The<sp/>path<sp/>to<sp/>the<sp/>directory<sp/>where<sp/>your<sp/>code<sp/>lives.<sp/>This<sp/>is<sp/>necessary<sp/>if<sp/>you<sp/>need<sp/>to<sp/>access<sp/>App.config<sp/>files.<sp/>Used<sp/>in<sp/>conjunction<sp/>with<sp/>the<sp/>APP_CONFIG<sp/>environment<sp/>variable.<sp/>Both<sp/>must<sp/>be<sp/>set<sp/>to<sp/>use<sp/>App.config<sp/>files.</highlight></codeline>
<codeline><highlight class="normal">APP_CONFIG<sp/>[optional]:<sp/>The<sp/>path<sp/>to<sp/>the<sp/>App.config<sp/>file<sp/>used<sp/>for<sp/>your<sp/>project.<sp/>Used<sp/>in<sp/>conjunction<sp/>with<sp/>the<sp/>BASE_DIRECTORY<sp/>environment<sp/>variable.<sp/>Both<sp/>must<sp/>be<sp/>set<sp/>to<sp/>use<sp/>App.config<sp/>files.</highlight></codeline>
<codeline><highlight class="normal">ALLOW_REMOTE_DEBUGGING<sp/>[optional]:<sp/>If<sp/>specified<sp/>to<sp/>true,<sp/>will<sp/>block<sp/>until<sp/>a<sp/>remote<sp/>debugger<sp/>has<sp/>been<sp/>attached.</highlight></codeline>
</programlisting> </para>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
