<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="nwnx__profiler_8nss" kind="file" language="C++">
    <compoundname>nwnx_profiler.nss</compoundname>
    <includes local="yes">nwnx</includes>
    <incdepgraph>
      <node id="1">
        <label>Plugins/Profiler/NWScript/nwnx_profiler.nss</label>
        <link refid="nwnx__profiler_8nss"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nwnx</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__profiler_1ga23259b35b47366c0365ec01049d61e82" prot="private" static="no" mutable="no">
        <type>const string</type>
        <definition>const string NWNX_Profiler</definition>
        <argsstring></argsstring>
        <name>NWNX_Profiler</name>
        <initializer>= &quot;NWNX_Profiler&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Profiler/NWScript/nwnx_profiler.nss" line="8" column="14" bodyfile="Plugins/Profiler/NWScript/nwnx_profiler.nss" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__profiler_1ga58c858bf7d10aaf6a166e78de69de79c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NWNX_Profiler_PushPerfScope</definition>
        <argsstring>(string name, string tag0_tag=&quot;&quot;, string tag0_value=&quot;&quot;)</argsstring>
        <name>NWNX_Profiler_PushPerfScope</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>string</type>
          <declname>tag0_tag</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>string</type>
          <declname>tag0_value</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Push a timing metric scope - note that every push must be matched by a corresponding pop. </para>
        </briefdescription>
        <detaileddescription>
<para>A timing metric contains the following information. <programlisting filename=".c"><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>metricName:<sp/>[name],<sp/></highlight><highlight class="comment">//<sp/>Mandatory,<sp/>from<sp/>user<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>metricFields:<sp/>{<sp/>time,<sp/>nanoseconds<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Automatically<sp/>captured<sp/>by<sp/>the<sp/>push/pop<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>metricTags:<sp/>{<sp/>[tag0_tag],<sp/>[tag0_value]<sp/>}<sp/></highlight><highlight class="comment">//<sp/>Optional,<sp/>from<sp/>user<sp/>code,<sp/>can<sp/>be<sp/>used<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter<sp/>metrics<sp/>based<sp/>on<sp/>some<sp/>category<sp/>or,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constant<sp/>e.g.<sp/>objectType<sp/>or<sp/>area</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>If you don&apos;t understand how this works and you wish to use it, you should research the Metrics system (see Metrics.hpp) as well as googling about how InfluxDB stores metrics.</para>
<para><simplesect kind="note"><para>It&apos;s possible to have more than one tag pair per metric, It is just limited to one arbitrarily here. You can edit the prototype to include more and the C++ code will cope with it correctly. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name to use for your metric. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag0_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional tag to filter your metrics. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag0_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The tag&apos;s value for which to filter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Profiler/NWScript/nwnx_profiler.nss" line="40" column="6" bodyfile="Plugins/Profiler/NWScript/nwnx_profiler.nss" bodystart="40" bodyend="53" declfile="Plugins/Profiler/NWScript/nwnx_profiler.nss" declline="32" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__profiler_1ga495550a915f20515c9be66513245fdb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NWNX_Profiler_PopPerfScope</definition>
        <argsstring>()</argsstring>
        <name>NWNX_Profiler_PopPerfScope</name>
        <briefdescription>
<para>Pops a timing metric. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>A metric must already be pushed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/Profiler/NWScript/nwnx_profiler.nss" line="55" column="6" bodyfile="Plugins/Profiler/NWScript/nwnx_profiler.nss" bodystart="55" bodyend="60" declfile="Plugins/Profiler/NWScript/nwnx_profiler.nss" declline="36" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;nwnx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>NWNX_Profiler<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NWNX_Profiler&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__profiler_1ga58c858bf7d10aaf6a166e78de69de79c" kindref="member">NWNX_Profiler_PushPerfScope</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tag0_tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tag0_value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__profiler_1ga495550a915f20515c9be66513245fdb4" kindref="member">NWNX_Profiler_PopPerfScope</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__profiler_1ga58c858bf7d10aaf6a166e78de69de79c" kindref="member">NWNX_Profiler_PushPerfScope</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tag0_tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tag0_value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PUSH_PERF_SCOPE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_PushArgumentString(NWNX_Profiler,<sp/>sFunc,<sp/>name);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tag0_value<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>tag0_tag<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_PushArgumentString(NWNX_Profiler,<sp/>sFunc,<sp/>tag0_value);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NWNX_PushArgumentString(NWNX_Profiler,<sp/>sFunc,<sp/>tag0_tag);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_Profiler,<sp/>sFunc);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__profiler_1ga495550a915f20515c9be66513245fdb4" kindref="member">NWNX_Profiler_PopPerfScope</ref>()</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;POP_PERF_SCOPE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_Profiler,<sp/>sFunc);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Plugins/Profiler/NWScript/nwnx_profiler.nss"/>
  </compounddef>
</doxygen>
