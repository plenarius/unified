<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="nwnx__elc_8nss" kind="file" language="C++">
    <compoundname>nwnx_elc.nss</compoundname>
    <includes local="yes">nwnx</includes>
    <incdepgraph>
      <node id="2">
        <label>nwnx</label>
      </node>
      <node id="1">
        <label>Plugins/ELC/NWScript/nwnx_elc.nss</label>
        <link refid="nwnx__elc_8nss"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>ELC Failure Types</header>
      <description><para><anchor id="group__elc_1elc_fail_type"/></para>
</description>
      <memberdef kind="variable" id="group__elc_1gaa09bf88c00cbf1ee60038ecf4d44ae7b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_NONE</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_NONE</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="13" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1gaacd02a1af0ad8e78ed791343b97da5e6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_CHARACTER</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_CHARACTER</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="14" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1ga38d517de881416a68a6c3356ded2edac" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_ITEM</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_ITEM</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="15" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1ga312be6e31150f0987c1301d5bfda1116" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_SKILL</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_SKILL</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="16" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1gad41ca16b81506fe13eac194c5d77e824" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_FEAT</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_FEAT</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="17" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1gaf204259b43b1f440fbbb05739cec0a03" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_SPELL</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_SPELL</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="18" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__elc_1gaea995d7304c6e960c41156cc52c492c4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_VALIDATION_FAILURE_TYPE_CUSTOM</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_VALIDATION_FAILURE_TYPE_CUSTOM</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="19" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>ELC Failure Subtypes</header>
      <description><para><anchor id="group__elc_1elc_fail_subtype"/> <simplesect kind="note"><para>By default these constants are commented out to avoid a limitation on constants. Uncomment them as needed. </para>
</simplesect>
</para>
</description>
      <memberdef kind="variable" id="group__elc_1ga07256d7e47ab36f29bfca8c0c1562aad" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NWNX_ELC_SUBTYPE_NONE</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC_SUBTYPE_NONE</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="27" column="11" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__elc_1ga3b7e3e4509a25a4987c9afa50ba06ac5" prot="private" static="no" mutable="no">
        <type>const string</type>
        <definition>const string NWNX_ELC</definition>
        <argsstring></argsstring>
        <name>NWNX_ELC</name>
        <initializer>= &quot;NWNX_ELC&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="7" column="14" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__elc_1gab972f430b5120e2f0484c50b14017928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NWNX_ELC_SetELCScript</definition>
        <argsstring>(string sScript)</argsstring>
        <name>NWNX_ELC_SetELCScript</name>
        <param>
          <type>string</type>
          <declname>sScript</declname>
        </param>
        <briefdescription>
<para>Sets the script that runs whenever an ELC validation failure happens. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sScript</parametername>
</parameternamelist>
<parameterdescription>
<para>The script name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="153" column="6" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="153" bodyend="159" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1gaf8f9ce7d4def55be7f42ffef8ac0218b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NWNX_ELC_EnableCustomELCCheck</definition>
        <argsstring>(int bEnabled)</argsstring>
        <name>NWNX_ELC_EnableCustomELCCheck</name>
        <param>
          <type>int</type>
          <declname>bEnabled</declname>
        </param>
        <briefdescription>
<para>Enables a custom ELC Check that will call the ELC Script with the NWNX_ELC_VALIDATION_FAILURE_TYPE_CUSTOM type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bEnabled</parametername>
</parameternamelist>
<parameterdescription>
<para>TRUE to use this check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Only runs if you have an ELC script set, be sure to skip this check if a player doesn&apos;t fail your custom check otherwise they won&apos;t be able to log in </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="161" column="6" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="161" bodyend="167" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="92" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1gad5c223e082822a98a478dcdfb0c58fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NWNX_ELC_SkipValidationFailure</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_SkipValidationFailure</name>
        <briefdescription>
<para>Skip an ELC Validation Failure Event. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="169" column="6" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="169" bodyend="174" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga2b8d375be0d3f169f77f596b4365ef89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureType</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureType</name>
        <briefdescription>
<para>Get the validation failure type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="group__elc_1elc_fail_type" kindref="member">Validation Failure Type</ref> </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="176" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="176" bodyend="182" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="101" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga9c156cbef588d042100fcb863d76fbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureSubType</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureSubType</name>
        <briefdescription>
<para>Get the validation failure subtype. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="group__elc_1elc_fail_subtype" kindref="member">Validation Failure Subtype</ref> </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="184" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="184" bodyend="190" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="106" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga96cad82fef77d44f2d5e8e31c4442d5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureMessageStrRef</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureMessageStrRef</name>
        <briefdescription>
<para>Get the failure message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The talk table strref the player receives. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="192" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="192" bodyend="198" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="111" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga941296472e032be124dea8d8118b15a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NWNX_ELC_SetValidationFailureMessageStrRef</definition>
        <argsstring>(int nStrRef)</argsstring>
        <name>NWNX_ELC_SetValidationFailureMessageStrRef</name>
        <param>
          <type>int</type>
          <declname>nStrRef</declname>
        </param>
        <briefdescription>
<para>Set the failure message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nStrRef</parametername>
</parameternamelist>
<parameterdescription>
<para>The talk table strref the player receives, must be &gt; 0. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="200" column="6" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="200" bodyend="206" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="116" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1gafe933184f0deb75e7ceb976731860b62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>object</type>
        <definition>object NWNX_ELC_GetValidationFailureItem</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureItem</name>
        <briefdescription>
<para>Get the item that failed ILR validation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The object that caused the ILR validation failure. Returns OBJECT_INVALID on error. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script during a NWNX_ELC_VALIDATION_FAILURE_TYPE_ITEM validation failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="208" column="8" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="208" bodyend="214" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="122" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga084cf4874bb02adae65997cb9fe8bf4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureLevel</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureLevel</name>
        <briefdescription>
<para>Get the character level at which the validation failure occurred. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The character level or -1 on error. </para>
</simplesect>
<simplesect kind="remark"><para>May not always return a level, depending on where the failure occurred. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="216" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="216" bodyend="222" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="128" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga4db1366221aed91969d8db403de948fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureSkillID</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureSkillID</name>
        <briefdescription>
<para>Get the ID of the skill that failed ELC validation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The skill ID or -1 on error. </para>
</simplesect>
<simplesect kind="remark"><para>May not always return a skill id, depending on the validation failure subtype. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script during a NWNX_ELC_VALIDATION_FAILURE_TYPE_SKILL validation failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="224" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="224" bodyend="230" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="135" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1gaba8456ea776417c0a8656699861d49a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureFeatID</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureFeatID</name>
        <briefdescription>
<para>Get the ID of the feat that failed ELC validation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The feat ID or -1 on error </para>
</simplesect>
<simplesect kind="remark"><para>May not always return a feat id, depending on the validation failure subtype. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script during a NWNX_ELC_VALIDATION_FAILURE_TYPE_FEAT validation failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="232" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="232" bodyend="238" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="142" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__elc_1ga9b4d6f09791a5e7d07d2f61eff4c9761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NWNX_ELC_GetValidationFailureSpellID</definition>
        <argsstring>()</argsstring>
        <name>NWNX_ELC_GetValidationFailureSpellID</name>
        <briefdescription>
<para>Get the ID of the spell that failed ELC validation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The spell ID or -1 on error </para>
</simplesect>
<simplesect kind="remark"><para>May not always return a spell id, depending on the validation failure subtype. </para>
</simplesect>
<simplesect kind="note"><para>Only to be called in the ELC Script during a NWNX_ELC_VALIDATION_FAILURE_TYPE_SPELL validation failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Plugins/ELC/NWScript/nwnx_elc.nss" line="240" column="5" bodyfile="Plugins/ELC/NWScript/nwnx_elc.nss" bodystart="240" bodyend="246" declfile="Plugins/ELC/NWScript/nwnx_elc.nss" declline="149" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;nwnx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>NWNX_ELC<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NWNX_ELC&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_CHARACTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_ITEM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_SKILL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_FEAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_SPELL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NWNX_ELC_VALIDATION_FAILURE_TYPE_CUSTOM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="21"></codeline>
<codeline lineno="27"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NWNX_ELC_SUBTYPE_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SERVER_LEVEL_RESTRICTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="30"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_LEVEL_HACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="31"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_COLORED_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="32"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_UNIDENTIFIED_EQUIPPED_ITEM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="33"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_MIN_EQUIP_LEVEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="34"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_NON_PC_CHARACTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="35"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_DM_CHARACTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="36"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_NON_PLAYER_RACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="37"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_NON_PLAYER_CLASS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="38"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_CLASS_LEVEL_RESTRICTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="39"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_PRESTIGE_CLASS_REQUIREMENTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="40"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_CLASS_ALIGNMENT_RESTRICTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="41"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_STARTING_ABILITY_VALUE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>13;</highlight></codeline>
<codeline lineno="42"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_ABILITY_POINT_BUY_SYSTEM_CALCULATION<sp/><sp/><sp/><sp/><sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="43"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_CLASS_SPELLCASTER_INVALID_PRIMARY_STAT<sp/><sp/><sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="44"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_EPIC_LEVEL_FLAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="45"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_TOO_MANY_HITPOINTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="46"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_UNUSABLE_SKILL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>18;</highlight></codeline>
<codeline lineno="47"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_NOT_ENOUGH_SKILLPOINTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>19;</highlight></codeline>
<codeline lineno="48"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_INVALID_NUM_RANKS_IN_CLASS_SKILL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="49"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_INVALID_NUM_RANKS_IN_NON_CLASS_SKILL<sp/><sp/><sp/><sp/><sp/>=<sp/>21;</highlight></codeline>
<codeline lineno="50"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_INVALID_NUM_REMAINING_SKILL_POINTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>22;</highlight></codeline>
<codeline lineno="51"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_INVALID_FEAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>23;</highlight></codeline>
<codeline lineno="52"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_FEAT_REQUIRED_SPELL_LEVEL_NOT_MET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="53"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_FEAT_REQUIRED_BASE_ATTACK_BONUS_NOT_MET<sp/><sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="54"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_FEAT_REQUIRED_ABILITY_VALUE_NOT_MET<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>26;</highlight></codeline>
<codeline lineno="55"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_FEAT_REQUIRED_SKILL_NOT_MET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>27;</highlight></codeline>
<codeline lineno="56"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_FEAT_REQUIRED_FEAT_NOT_MET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>28;</highlight></codeline>
<codeline lineno="57"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_TOO_MANY_FEATS_THIS_LEVEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>29;</highlight></codeline>
<codeline lineno="58"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_FEAT_NOT_AVAILABLE_TO_CLASS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="59"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_FEAT_IS_NORMAL_FEAT_ONLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>31;</highlight></codeline>
<codeline lineno="60"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_FEAT_IS_BONUS_FEAT_ONLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="61"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_INVALID_SPELL_GAIN_WIZARD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>33;</highlight></codeline>
<codeline lineno="62"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_INVALID_SPELL_GAIN_BARD_SORCERER<sp/><sp/><sp/>=<sp/>34;</highlight></codeline>
<codeline lineno="63"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_INVALID_SPELL_GAIN_OTHER_CLASSES<sp/><sp/><sp/>=<sp/>35;</highlight></codeline>
<codeline lineno="64"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_INVALID_SPELL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>36;</highlight></codeline>
<codeline lineno="65"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_INVALID_SPELL_LEVEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>37;</highlight></codeline>
<codeline lineno="66"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_MINIMUM_ABILITY_BARD_SORCERER<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>38;</highlight></codeline>
<codeline lineno="67"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_MINIMUM_ABILITY_WIZARD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>39;</highlight></codeline>
<codeline lineno="68"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_MINIMUM_ABILITY_OTHER_CLASSES<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="69"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_RESTRICTED_SPELL_SCHOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>41;</highlight></codeline>
<codeline lineno="70"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_ALREADY_KNOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="71"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_WIZARD_EXCEEDS_NUMSPELLS_TO_ADD<sp/><sp/><sp/><sp/>=<sp/>43;</highlight></codeline>
<codeline lineno="72"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_ILLEGAL_REMOVED_SPELL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>44;</highlight></codeline>
<codeline lineno="73"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_REMOVED_NOT_KNOWN_SPELL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>45;</highlight></codeline>
<codeline lineno="74"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_INVALID_NUM_SPELLS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>46;</highlight></codeline>
<codeline lineno="75"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SPELL_LIST_COMPARISON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>47;</highlight></codeline>
<codeline lineno="76"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_SKILL_LIST_COMPARISON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>48;</highlight></codeline>
<codeline lineno="77"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_FEAT_LIST_COMPARISON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>49;</highlight></codeline>
<codeline lineno="78"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_MISC_SAVING_THROW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="79"><highlight class="comment">const<sp/>int<sp/>NWNX_ELC_SUBTYPE_NUM_FEAT_COMPARISON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>51;</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="82"></codeline>
<codeline lineno="85"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__elc_1gab972f430b5120e2f0484c50b14017928" kindref="member">NWNX_ELC_SetELCScript</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sScript);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__elc_1gaf8f9ce7d4def55be7f42ffef8ac0218b" kindref="member">NWNX_ELC_EnableCustomELCCheck</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bEnabled);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__elc_1gad5c223e082822a98a478dcdfb0c58fa3" kindref="member">NWNX_ELC_SkipValidationFailure</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga2b8d375be0d3f169f77f596b4365ef89" kindref="member">NWNX_ELC_GetValidationFailureType</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga9c156cbef588d042100fcb863d76fbb1" kindref="member">NWNX_ELC_GetValidationFailureSubType</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga96cad82fef77d44f2d5e8e31c4442d5f" kindref="member">NWNX_ELC_GetValidationFailureMessageStrRef</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga941296472e032be124dea8d8118b15a4" kindref="member">NWNX_ELC_SetValidationFailureMessageStrRef</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStrRef);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/><ref refid="group__elc_1gafe933184f0deb75e7ceb976731860b62" kindref="member">NWNX_ELC_GetValidationFailureItem</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga084cf4874bb02adae65997cb9fe8bf4b" kindref="member">NWNX_ELC_GetValidationFailureLevel</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga4db1366221aed91969d8db403de948fc" kindref="member">NWNX_ELC_GetValidationFailureSkillID</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1gaba8456ea776417c0a8656699861d49a5" kindref="member">NWNX_ELC_GetValidationFailureFeatID</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga9b4d6f09791a5e7d07d2f61eff4c9761" kindref="member">NWNX_ELC_GetValidationFailureSpellID</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__elc_1gab972f430b5120e2f0484c50b14017928" kindref="member">NWNX_ELC_SetELCScript</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sScript)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SetELCScript&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_PushArgumentString(NWNX_ELC,<sp/>sFunc,<sp/>sScript);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__elc_1gaf8f9ce7d4def55be7f42ffef8ac0218b" kindref="member">NWNX_ELC_EnableCustomELCCheck</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bEnabled)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EnableCustomELCCheck&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_PushArgumentInt(NWNX_ELC,<sp/>sFunc,<sp/>bEnabled);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__elc_1gad5c223e082822a98a478dcdfb0c58fa3" kindref="member">NWNX_ELC_SkipValidationFailure</ref>()</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SkipValidationFailure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga2b8d375be0d3f169f77f596b4365ef89" kindref="member">NWNX_ELC_GetValidationFailureType</ref>()</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetValidationFailureType&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga9c156cbef588d042100fcb863d76fbb1" kindref="member">NWNX_ELC_GetValidationFailureSubType</ref>()</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetValidationFailureSubType&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga96cad82fef77d44f2d5e8e31c4442d5f" kindref="member">NWNX_ELC_GetValidationFailureMessageStrRef</ref>()</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetValidationFailureMessageStrRef&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga941296472e032be124dea8d8118b15a4" kindref="member">NWNX_ELC_SetValidationFailureMessageStrRef</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nStrRef)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SetValidationFailureMessageStrRef&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_PushArgumentInt(NWNX_ELC,<sp/>sFunc,<sp/>nStrRef);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/><ref refid="group__elc_1gafe933184f0deb75e7ceb976731860b62" kindref="member">NWNX_ELC_GetValidationFailureItem</ref>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetValidationFailureItem&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueObject(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga084cf4874bb02adae65997cb9fe8bf4b" kindref="member">NWNX_ELC_GetValidationFailureLevel</ref>()</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetValidationFailureLevel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga4db1366221aed91969d8db403de948fc" kindref="member">NWNX_ELC_GetValidationFailureSkillID</ref>()</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetValidationFailureSkillID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1gaba8456ea776417c0a8656699861d49a5" kindref="member">NWNX_ELC_GetValidationFailureFeatID</ref>()</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetValidationFailureFeatID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__elc_1ga9b4d6f09791a5e7d07d2f61eff4c9761" kindref="member">NWNX_ELC_GetValidationFailureSpellID</ref>()</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sFunc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GetValidationFailureSpellID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>NWNX_CallFunction(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NWNX_GetReturnValueInt(NWNX_ELC,<sp/>sFunc);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Plugins/ELC/NWScript/nwnx_elc.nss"/>
  </compounddef>
</doxygen>
